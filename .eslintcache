[{"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/context.js":"1","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/results/results.js":"2","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/search/search.js":"3","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/loginSignup/login-page.js":"4","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/map/map.js":"5","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/config.js":"6","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/App.js":"7"},{"size":313,"mtime":1612136174162,"results":"8","hashOfConfig":"9"},{"size":3653,"mtime":1612147677932,"results":"10","hashOfConfig":"9"},{"size":4398,"mtime":1612125895983,"results":"11","hashOfConfig":"9"},{"size":2850,"mtime":1611962938652,"results":"12","hashOfConfig":"9"},{"size":2979,"mtime":1612144241014,"results":"13","hashOfConfig":"9"},{"size":173,"mtime":1612041767538,"results":"14","hashOfConfig":"9"},{"size":2410,"mtime":1612136144915,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jzzm3",{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/context.js",[],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/results/results.js",["35","36","37"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Result from './result'\nimport MapWrapped from '../map/map'\nimport DoggoContext from '../context'\nimport LogOut from '../loginSignup/logout'\nimport config from '../config'\nimport TokenService from '../client-services/token'\n\n\nexport default class Results extends React.Component {\n\n    static contextType = DoggoContext;\n\n    componentDidMount(){\n        const token = TokenService.getAuthToken();\n        const options = {\n            method : 'GET',\n            headers : {\n                'session_token' : token\n            }\n        }\n\n        fetch( `${config.API_ENDPOINT}/api/validate`, options )\n            .then( response => {\n                if( response.ok ){\n                    return response.json();\n                }\n\n                throw new Error( response.statusText );\n            })\n            .then( responseJson => {\n                this.setState({\n                    message : responseJson.message\n                })\n            })\n            .catch( err => {\n                console.log( err.message );\n                this.props.history.push( '/login' );\n            });\n    }\n\n\n    render(){\n\n    const results = this.context.locations.results\n\n    // console.log(results)\n    // console.log(this.context.currentZip.slice(0,-1))\n    // console.log(this.context.locations.results[0].formatted_address.split(',')[2].split(' ')[2].slice(0,-1) )\n\n    \n    let revised = () => {\n\n\n        if(!results){\n            return 'No Results Found - Please try a different zip'\n        }\n        \n        else {\n\n         return results.filter((result,i) => {\n         console.log(this.context.currentZip)\n   \n         return result.formatted_address.split(',')[2].split(' ')[2].slice(0,-1) == this.context.currentZip.slice(0,-1)})\n\n\n      \n            }\n        } \n\n    console.log('filter results',revised())\n\n     const searchResults = results.map( (places, i) => {\n\n            return (\n                <ul key = {this.context.locations.results[i].id}>\n                    <li className = {this.context.locations.results[i].id}>\n                     <Result \n                        title = {this.context.locations.results[i].name}\n                        address = {this.context.locations.results[i].formatted_address}\n                        overall_rating = {this.context.locations.results[i].rating}\n                        place_id = {this.context.locations.results[i].place_id}\n                        id ={this.context.locations.results[i].id}\n                     \n                        />\n                    </li>\n                </ul>)\n            \n                }\n\n\n      )\n\n\n             return(\n                 <div>\n                     {this.context.locations.results.length > 0 ?\n                     <div>\n                     <div>{searchResults}</div>\n                     <div style={{ width: \"75vw\", height: \"100vh\" }} className = \"map\"> \n                          <MapWrapped       \n                          googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${config.key}`}\n                          loadingElement={<div style={{ height: \"100%\" }} />}\n                          containerElement={<div style={{ height: \"100%\" }} />}\n                          mapElement={<div style={{ height: \"100%\" }} /> }\n                          />\n                    \n                      </div>\n                      </div>\n                      : 'No results - Please try a different zip'\n                     }\n                     </div>\n                \n             )\n   \n    }\n\n}","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/search/search.js",["38","39"],"import React from 'react';\nimport './search-form.css'\nimport Results from '../results/results'\nimport { Link } from 'react-router-dom';\nimport config from '../config'\nimport DoggoContext from '../context'\nimport MapWrapped from '../map/map';\nimport Sidebar from '../sidebar/sidebar'\nimport TokenService from '../client-services/token'\nimport LogOut from '../loginSignup/logout'\n\n\n\nexport default class SearchForm extends React.Component {\n\n    static contextType = DoggoContext;\n\n\n    constructor(props){\n        super(props)\n        \n        this.zipInput = React.createRef()\n        this.typeInput = React.createRef()\n        \n        this.state = {\n            clicked : false,\n            places : []\n        }\n    }\n\n    componentDidMount(){\n        const token = TokenService.getAuthToken();\n        const options = {\n            method : 'GET',\n            headers : {\n                'session_token' : token\n            }\n        }\n\n        fetch( `${config.API_ENDPOINT}/api/validate`, options )\n            .then( response => {\n                if( response.ok ){\n                    return response.json();\n                }\n\n                throw new Error( response.statusText );\n            })\n            .then( responseJson => {\n                this.setState({\n                    message : responseJson.message\n                })\n            })\n            .catch( err => {\n                console.log( err.message );\n                this.props.history.push( '/login' );\n            });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        \n\n\n        const searchValues = {\n            zip: this.zipInput.current.value,\n            type: this.typeInput.current.value\n           \n           \n        };\n        //console.log(searchValues)\n        console.log(TokenService.getAuthToken())\n        fetch(`${config.API_ENDPOINT}/api/search`, {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json',\n            'session_token': TokenService.getAuthToken()\n\n        },\n        body: JSON.stringify(searchValues)\n        })\n          .then(res => {\n            if(!res.ok){\n              return res.json().then(e => Promise.reject(e))\n            }\n            \n             return res.json()\n          })\n          .then(places => {\n\n            this.context.setLocations(places)\n            this.setState({\n                clicked : true,\n                places: places} \n            );\n\n\n          })\n          .catch(error => {\n            this.context.setLocations({ results: [] })\n\n              console.log(error)\n        })\n\n\n    }\n\n    render(){\n        return(\n                <div>\n                <Sidebar width={300} height={\"100vh\"}>\n                <Link to ='./dashboard'>Your Dashboard</Link>\n                <br></br>\n                <br></br>\n                <Link to ='./recommend'>Recommend A Business</Link>\n                </Sidebar>\n                <h1>Begin Your Search</h1>\n                <form className ='form-container' onSubmit={this.handleSubmit}>\n                <div className = \"input\">       \n                <label for=\"fname\" >5 Digit Zip Code (US Only):</label>\n                <input ref = {this.zipInput} type=\"text\" id=\"zip\" name=\"zip\" defaultValue = \"10011\"/>\n                </div>\n                <div className = \"input\"> \n                <label for=\"type\">Type of Activity:</label>\n                <select ref = {this.typeInput} name=\"type\" id=\"type\">\n                <option value=\"Parks\">Parks</option>\n                <option value=\"Bars\">Bars</option>\n                <option value=\"Restaurants\">Restaurants</option>\n                <option value=\"Pet Supplies\">Pet Supplies</option>\n                <option value=\"Veterinarian Services\">Veterinarian Services</option>\n                <option value=\"Dog Beaches\">Beaches</option>\n                <option value=\"Pet Hotels\">Hotels</option>\n                <option value=\"Groomers\">Groomers</option>\n                <option value=\"Hiking Trails\"> Hiking Trails</option>\n                <option value=\"Brunch\">Brunch Spots</option>\n\n\n\n\n\n                </select>\n                </div>\n                <input type=\"submit\" value=\"Fetch!\" className=\"button\" />\n                </form>\n                <div className = \"results\"> {this.state.clicked ? <Results /> : null}</div>\n\n               \n                </div>\n        )\n    }\n}\n","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/loginSignup/login-page.js",["40","41"],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/map/map.js",["42","43","44","45","46","47"],"import SearchForm from '../search/search'\nimport Sidebar from '../sidebar/sidebar'\nimport {Link} from 'react-router-dom'\nimport DoggoContext from '../context'\nimport React, { useState, useEffect, useContext } from \"react\";\nimport {\n  withGoogleMap,\n  withScriptjs,\n  GoogleMap,\n  Marker,\n  InfoWindow\n} from \"react-google-maps\";\nimport mapStyles from \"./mapStyles\";\nimport config from '../config';\nimport TokenService from '../client-services/token'\n \n \nclass Map extends React.Component {\n    static contextType = DoggoContext\n\n    state = {\n        selected : {}\n        \n    }\n\n    componentDidMount(){\n      const token = TokenService.getAuthToken();\n      const options = {\n          method : 'GET',\n          headers : {\n              'session_token' : token\n          }\n      }\n\n      fetch( `${config.API_ENDPOINT}/api/validate`, options )\n          .then( response => {\n              if( response.ok ){\n                  return response.json();\n              }\n\n              throw new Error( response.statusText );\n          })\n          .then( responseJson => {\n              this.setState({\n                  message : responseJson.message\n              })\n          })\n          .catch( err => {\n              console.log( err.message );\n              this.props.history.push( '/login' );\n          });\n  }\n\n\n\n    render(){\n\n   \n  \n    return (\n        <div>\n          {this.context.locations ?\n        <GoogleMap\n            defaultZoom={12}\n            initialCenter={{lat:39.011902,lng:-98.484245}}\n            center={{lat:this.context.locations.results[0].geometry.location.lat, lng:this.context.locations.results[0].geometry.location.lng}}\n            defaultOptions={{ styles: mapStyles }}\n        >\n            {this.context.locations.results.map((result , i)=> (\n            <Marker\n                key={result.i}\n                position={{\n                lat: result.geometry.location.lat,\n                lng: result.geometry.location.lng\n                }}\n                onClick={() => {\n                    this.setState({selected:result});\n                  }}\n                icon={{\n                url: \"https://img.icons8.com/cotton/64/000000/dog-jump--v1.png\",\n                scaledSize: new window.google.maps.Size(25, 25)\n                }}\n            /> \n            ))} \n        {this.state.selected && this.state.selected.geometry && (\n        <InfoWindow\n          onCloseClick={() => {\n            this.setState({selected:null});\n        }}\n          position={{\n\n            lat: this.state.selected.geometry.location.lat,\n            lng: this.state.selected.geometry.location.lng\n          }}\n        >\n          <div>\n            <h2>{this.state.selected.name}</h2>\n            <p>{this.state.selected.formatted_address}</p>\n          </div>\n        </InfoWindow>\n      )}\n        </GoogleMap>\n        : null }\n        </div>\n     );\n    }\n  }\n  \n\nconst MapWrapped  = withScriptjs(withGoogleMap(Map))\n \nexport default MapWrapped;","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/config.js",["48"],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/App.js",["49","50"],"import LoginPage from './loginSignup/login-page';\nimport SignUp from './loginSignup/sign-up';\nimport {Route} from 'react-router-dom';\nimport MapWrapped from './map/map';\nimport Favorites from './favorites/favorites';\nimport './map/map.css';\nimport Recommend from './recommend/recommend';\nimport DoggoContext from './context'\nimport React from 'react';\nimport SearchForm from './search/search'\nimport StarRating from './favorites/rating'\nimport LogOut from './loginSignup/logout'\nimport Welcome from './welcome/welcome'\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      places : [],\n      user_name: '',\n      savedSpots : [],\n      detailsToDisplay: [],\n      currentZip: ''\n    }\n  }\n\n  getPlaces = (places) => {\n    this.setState({places: places })\n  }\n\n  updateUserName = (user) => {\n    this.setState({user_name: user})\n    \n  }\n\n  setUserSpots = spots => {\n    this.setState({savedSpots : spots})\n\n  }\n\n\n  addToSaved = (spot) => {\n    this.setState({ savedSpots: [...this.state.savedSpots, spot]})\n  }\n\n  deleteSpot = (id) => {\n    const { savedSpots } = this.state\n \n    this.setState({\n      savedSpots: savedSpots.filter (spot => {\n        return spot.id !== id\n      })\n    })\n\n  }\n\n  setCurrentZip = (zip) => {\n    this.setState({currentZip: zip})\n\n  }\n\n  render(){\n\n    const contextValues = {\n      locations: this.state.places,\n      setLocations : this.getPlaces,\n      user_name : this.state.user_name,\n      setUserName : this.updateUserName,\n      savedSpots : this.state.savedSpots,\n      addToSaved : this.addToSaved,\n      setUserSpots : this.setUserSpots,\n      deleteSpot : this.deleteSpot,\n      currentZip: this.state.currentZip,\n      setCurrentZip: this.setCurrentZip      \n    }\n  \n\n  return (\n\n    <DoggoContext.Provider value={contextValues}>\n\n    <div className=\"App\">\n    <Route exact path='/' component={Welcome} />\n      <Route exact path='/login' component={LoginPage} />\n      <Route path='/sign-up' component={SignUp} />\n      <Route path='/search' component={LogOut} />\n      <Route path='/search' component={SearchForm} />\n      <Route path='/dashboard' component={LogOut} />\n      <Route path='/dashboard' component={Favorites} />\n      <Route path='/recommend' component={LogOut} />\n      <Route path='/recommend' component={Recommend} />\n    </div>\n    </ DoggoContext.Provider >\n\n    )\n\n  } \n}\n\n\nexport default App;\n",["51","52"],{"ruleId":"53","severity":1,"message":"54","line":2,"column":10,"nodeType":"55","messageId":"56","endLine":2,"endColumn":14},{"ruleId":"53","severity":1,"message":"57","line":6,"column":8,"nodeType":"55","messageId":"56","endLine":6,"endColumn":14},{"ruleId":"58","severity":1,"message":"59","line":65,"column":82,"nodeType":"60","messageId":"61","endLine":65,"endColumn":84},{"ruleId":"53","severity":1,"message":"62","line":7,"column":8,"nodeType":"55","messageId":"56","endLine":7,"endColumn":18},{"ruleId":"53","severity":1,"message":"57","line":10,"column":8,"nodeType":"55","messageId":"56","endLine":10,"endColumn":14},{"ruleId":"53","severity":1,"message":"63","line":2,"column":10,"nodeType":"55","messageId":"56","endLine":2,"endColumn":15},{"ruleId":"53","severity":1,"message":"64","line":3,"column":8,"nodeType":"55","messageId":"56","endLine":3,"endColumn":14},{"ruleId":"53","severity":1,"message":"65","line":1,"column":8,"nodeType":"55","messageId":"56","endLine":1,"endColumn":18},{"ruleId":"53","severity":1,"message":"66","line":2,"column":8,"nodeType":"55","messageId":"56","endLine":2,"endColumn":15},{"ruleId":"53","severity":1,"message":"54","line":3,"column":9,"nodeType":"55","messageId":"56","endLine":3,"endColumn":13},{"ruleId":"53","severity":1,"message":"67","line":5,"column":17,"nodeType":"55","messageId":"56","endLine":5,"endColumn":25},{"ruleId":"53","severity":1,"message":"68","line":5,"column":27,"nodeType":"55","messageId":"56","endLine":5,"endColumn":36},{"ruleId":"53","severity":1,"message":"69","line":5,"column":38,"nodeType":"55","messageId":"56","endLine":5,"endColumn":48},{"ruleId":"70","severity":1,"message":"71","line":1,"column":1,"nodeType":"72","endLine":5,"endColumn":2},{"ruleId":"53","severity":1,"message":"62","line":4,"column":8,"nodeType":"55","messageId":"56","endLine":4,"endColumn":18},{"ruleId":"53","severity":1,"message":"73","line":11,"column":8,"nodeType":"55","messageId":"56","endLine":11,"endColumn":18},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'LogOut' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'MapWrapped' is defined but never used.","'Route' is defined but never used.","'SignUp' is defined but never used.","'SearchForm' is defined but never used.","'Sidebar' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useContext' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'StarRating' is defined but never used.","no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-global-assign","no-unsafe-negation"]