[{"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/context.js":"1","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/results/results.js":"2","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/search/search.js":"3","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/loginSignup/login-page.js":"4","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/map/map.js":"5","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/config.js":"6","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/App.js":"7","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/results/result.js":"8","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/loginSignup/sign-up.js":"9","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/favorites/favorites.js":"10","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/sidebar/sidebar.js":"11","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/loginSignup/logout.js":"12","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/recommend/recommend.js":"13","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/favorites/favorite.js":"14","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/client-services/token.js":"15","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/client-services/auth-api-service.js":"16","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/index.js":"17","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/map/mapStyles.js":"18"},{"size":313,"mtime":1612136174162,"results":"19","hashOfConfig":"20"},{"size":3239,"mtime":1613254537004,"results":"21","hashOfConfig":"20"},{"size":5122,"mtime":1613259479180,"results":"22","hashOfConfig":"20"},{"size":2735,"mtime":1613238939705,"results":"23","hashOfConfig":"20"},{"size":2979,"mtime":1612792598213,"results":"24","hashOfConfig":"20"},{"size":195,"mtime":1612976229489,"results":"25","hashOfConfig":"20"},{"size":2991,"mtime":1612976106299,"results":"26","hashOfConfig":"20"},{"size":5281,"mtime":1613252842131,"results":"27","hashOfConfig":"20"},{"size":2640,"mtime":1613239456837,"results":"28","hashOfConfig":"20"},{"size":2777,"mtime":1613260821061,"results":"29","hashOfConfig":"20"},{"size":841,"mtime":1612733785759,"results":"30","hashOfConfig":"20"},{"size":399,"mtime":1611239838109,"results":"31","hashOfConfig":"20"},{"size":3859,"mtime":1613264248487,"results":"32","hashOfConfig":"20"},{"size":1653,"mtime":1613260290390,"results":"33","hashOfConfig":"20"},{"size":560,"mtime":1612218472580,"results":"34","hashOfConfig":"20"},{"size":1086,"mtime":1610586843527,"results":"35","hashOfConfig":"20"},{"size":266,"mtime":1606353616875,"results":"36","hashOfConfig":"20"},{"size":2054,"mtime":1610725626478,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1jzzm3",{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"69"},"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/context.js",[],["87","88"],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/results/results.js",["89","90","91"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Result from './result';\nimport MapWrapped from '../map/map';\nimport DoggoContext from '../context';\nimport LogOut from '../loginSignup/logout';\nimport config from '../config';\nimport TokenService from '../client-services/token';\nimport './result.css';\n\n\nexport default class Results extends React.Component {\n\n    static contextType = DoggoContext;\n\n    componentDidMount(){\n        const token = TokenService.getAuthToken();\n        const options = {\n            method : 'GET',\n            headers : {\n                'session_token' : token\n            }\n        }\n\n        fetch( `${config.API_ENDPOINT}/api/validate`, options )\n            .then( response => {\n                if( response.ok ){\n                    return response.json();\n                }\n\n                throw new Error( response.statusText );\n            })\n            .then( responseJson => {\n                this.setState({\n                    message : responseJson.message\n                })\n            })\n            .catch( err => {\n                this.props.history.push( '/login' );\n            });\n    }\n\n\n    render(){\n\n    const results = this.context.locations.results\n    \n    let revised = () => {\n\n        if(!results){\n            return 'No Results Found - Please try a different zip'\n        }       \n        else {\n\n         return results.filter((result,i) => {\n          \n           let zip = this.context.currentZip\n           let zips = result.formatted_address\n           return zips.slice(-20,-16) == zip.slice(0,-1)})\n      \n            }\n        } \n\n    const filteredResults =  revised() \n\n    const searchResults = filteredResults.map( (place, i) => {\n\n            return (\n                <ul key = {place.id}>\n                    <li className = \"place\">\n                     <Result \n                        title = {place.name}\n                        address = {place.formatted_address}\n                        overall_rating = {place.rating}\n                        place_id = {place.place_id}\n                        id ={place.id}\n                     \n                        />\n                    </li>\n                </ul>)\n            \n                }\n\n\n      )\n\n\n             return(\n                 <div >\n                     {filteredResults.length > 0 ?\n                     <div className = \"results-container\">\n                     <div className = 'list-results'>{searchResults}</div>\n                     <div className = \"map-results\"> \n                          <MapWrapped       \n                          googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${config.key}`}\n                          loadingElement={<div style={{ height: \"100%\" }} />}\n                          containerElement={<div style={{ height: \"100%\" }} />}\n                          mapElement={<div style={{ height: \"100%\" }} /> }\n                          />\n                    \n                      </div>\n                      </div>\n                      : 'No results - Please try a different zip'\n                     }\n                     </div>\n                \n             )\n   \n    }\n\n}","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/search/search.js",["92","93","94"],"import React from 'react';\nimport './search-form.css'\nimport Results from '../results/results'\nimport { Link } from 'react-router-dom';\nimport config from '../config'\nimport DoggoContext from '../context'\nimport MapWrapped from '../map/map';\nimport Sidebar from '../sidebar/sidebar'\nimport TokenService from '../client-services/token'\nimport LogOut from '../loginSignup/logout'\n\n\n\nexport default class SearchForm extends React.Component {\n\n    static contextType = DoggoContext;\n\n\n    constructor(props){\n        super(props)\n        \n        this.zipInput = React.createRef()\n        this.typeInput = React.createRef()\n        \n        this.state = {\n            clicked : false,\n            places : []\n        }\n    }\n\n    componentDidMount(){\n        const token = TokenService.getAuthToken();\n        const options = {\n            method : 'GET',\n            headers : {\n                'session_token' : token\n            }\n        }\n\n        fetch( `${config.API_ENDPOINT}/api/validate`, options )\n            .then( response => {\n                if( response.ok ){\n                    return response.json();\n                }\n\n                throw new Error( response.statusText );\n            })\n            .then( responseJson => {\n                this.setState({\n                    message : responseJson.message\n                })\n            })\n            .catch( err => {\n                console.log( err.message );\n                this.props.history.push( '/login' );\n            });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        const searchValues = {\n            zip: this.zipInput.current.value,\n            type: this.typeInput.current.value   \n        };\n\n        this.context.setCurrentZip(this.zipInput.current.value)\n\n        fetch(`${config.API_ENDPOINT}/api/search`, {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json',\n            'session_token': TokenService.getAuthToken()\n\n        },\n        body: JSON.stringify(searchValues)\n        })\n          .then(res => {\n            if(!res.ok){\n              return res.json().then(e => Promise.reject(e))\n            }\n            \n             return res.json()\n          })\n          .then(places => {\n\n            this.context.setLocations(places)\n            this.setState({\n                clicked : true,\n                places: places} \n            );\n\n\n          })\n          .catch(error => {\n            this.context.setLocations({ results: [] })\n\n              console.log(error)\n        })\n\n\n    }\n\n    handleLogOut = () => {\n\n        TokenService.clearAuthToken()\n        console.log(this.props)\n        this.props.history.push('/login')\n\n    }\n\n    render(){\n\n        return(            \n                <div className = \"search-container\">\n                <Sidebar width={300} height={\"100vh\"} className = \"side-bar\"> \n                <br></br>           \n                <Link className = \"link1-button\" to ='./dashboard'>Your Dashboard</Link>   \n                <br></br>\n                <br></br>\n                <br></br>\n                <Link className = \"link2-button\" to ='./recommend'>Recommend A Business</Link>\n                <br></br>\n                <button className=\"log-out-button\" onClick = {this.handleLogOut}>Log out</button>\n                </Sidebar>\n                <div className = 'box-1'>\n                <h1 className = \"form-title\">Begin Your Search</h1>\n                <form className ='form-container' onSubmit={this.handleSubmit}>\n                <div >       \n                <label for=\"fname\" >5 Digit Zip Code (US Only):</label>\n                <input className = \"fetch-input\" ref = {this.zipInput} type=\"text\" id=\"zip\" name=\"zip\" defaultValue = \"10011\"/>\n                </div>\n                <div > \n                <label for=\"type\">Type of Activity:</label>\n                <select ref = {this.typeInput} name=\"type\" id=\"type\" className = \"fetch-input\">\n                <option value=\"Parks\">Parks</option>\n                <option value=\"Bars\">Bars</option>\n                <option value=\"Restaurants\">Restaurants</option>\n                <option value=\"Pet Supplies\">Pet Supplies</option>\n                <option value=\"Veterinarian Services\">Veterinarian Services</option>\n                <option value=\"Dog Beaches\">Beaches</option>\n                <option value=\"Pet Hotels\">Hotels</option>\n                <option value=\"Groomers\">Groomers</option>\n                <option value=\"Hiking Trails\"> Hiking Trails</option>\n                <option value=\"Brunch\">Brunch Spots</option>\n                </select>\n                </div>\n                <input type=\"submit\" value=\"Fetch!\" className=\"fetch-button\" />\n                </form>\n                <div className = 'image-container'> {!this.state.clicked ? <img className = \"form-image\" src = 'https://static01.nyt.com/images/2018/02/10/realestate/dogsofny-bkln/dogsofny-bkln-superJumbo.gif' /> : null}</div>\n                <div className = \"results\"> {this.state.clicked ? <Results /> : null}</div>\n                </div>\n                </div>\n        )\n    }\n}\n","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/loginSignup/login-page.js",["95","96","97"],"import React from 'react'\nimport { Route, Link } from 'react-router-dom'\nimport SignUp from './sign-up'\nimport AuthApiService from '../client-services/auth-api-service'\nimport TokenService from '../client-services/token'\nimport DoggoContext from '../context'\nimport config from '../config'\nimport './login.css'\n\nexport default class LoginPage extends React.Component {\n\n    static contextType = DoggoContext;\n\n    static defaultProps = {\n        onValidLogin: () => {}\n    };\n\n\n\n    constructor(props) {\n        super(props);\n        this.userInput = React.createRef();\n        this.passInput = React.createRef();\n        this.state = {error: null};\n    };\n\n    // handle login authentication and validation on submit. //\n    handleJwtLoginAuth = e => {\n        e.preventDefault();\n       \n     \n        AuthApiService.postLogin({\n            user_name: this.userInput.current.value,\n            password: this.passInput.current.value \n        })\n        .then(res => {\n        \n            this.context.setUserName(this.userInput.current.value)\n            localStorage.setItem( 'user_name', this.userInput.current.value );       \n            TokenService.saveAuthToken(res.token);\n            this.props.onValidLogin(); \n\n            })\n                \n           \n        .then(() => {\n            this.props.history.push('/search')})\n            \n        .catch(res => {\n            this.setState({\n            error: alert(\"Invalid username or password. Please re-enter your credentials.\")\n                });\n            });\n    \n    }\n\n\n    render() {\n\n          return(\n            <div className=\"container\">\n                <div className=\"left\">\n                    <div className=\"header\">\n                    <h2 className=\"animation a1\">DoggosWelcome</h2>\n                    <h4 className=\"animation a2\">Explore over thousands of dog-friendly places to stay, play, and eat with your dog! <br/><br/> Log in to get started</h4>\n                    </div>\n                    <form className=\"login-form\" onSubmit={this.handleJwtLoginAuth}>\n                    <input type=\"text\" ref = {this.userInput}  name=\"user\" id=\"user\" className=\"form-field animation a3\" placeholder=\"Username\"/>\n                    <input type=\"password\" ref = {this.passInput} name=\"password\" id=\"password\" className=\"form-field animation a4\" placeholder=\"Password\"/>\n                    <button className=\"animation a6\">LOGIN</button>                   \n                    <Link  className = \"link-sign-up\" to = '/sign-up'>New User? Sign up here</Link>\n                    </form>\n                </div>\n                <div className=\"right\"></div>\n            </div>\n                                  \n              \n\n\n\n\n\n        )\n    }\n\n\n}\n",["98","99"],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/map/map.js",["100","101","102","103","104","105"],"import SearchForm from '../search/search'\nimport Sidebar from '../sidebar/sidebar'\nimport {Link} from 'react-router-dom'\nimport DoggoContext from '../context'\nimport React, { useState, useEffect, useContext } from \"react\";\nimport {\n  withGoogleMap,\n  withScriptjs,\n  GoogleMap,\n  Marker,\n  InfoWindow\n} from \"react-google-maps\";\nimport mapStyles from \"./mapStyles\";\nimport config from '../config';\nimport TokenService from '../client-services/token'\n \n \nclass Map extends React.Component {\n    static contextType = DoggoContext\n\n    state = {\n        selected : {}\n        \n    }\n\n    componentDidMount(){\n      const token = TokenService.getAuthToken();\n      const options = {\n          method : 'GET',\n          headers : {\n              'session_token' : token\n          }\n      }\n\n      fetch( `${config.API_ENDPOINT}/api/validate`, options )\n          .then( response => {\n              if( response.ok ){\n                  return response.json();\n              }\n\n              throw new Error( response.statusText );\n          })\n          .then( responseJson => {\n              this.setState({\n                  message : responseJson.message\n              })\n          })\n          .catch( err => {\n              console.log( err.message );\n              this.props.history.push( '/login' );\n          });\n  }\n\n\n\n    render(){\n\n   \n  \n    return (\n        <div>\n          {this.context.locations ?\n        <GoogleMap\n            defaultZoom={12}\n            initialCenter={{lat:39.011902,lng:-98.484245}}\n            center={{lat:this.context.locations.results[0].geometry.location.lat, lng:this.context.locations.results[0].geometry.location.lng}}\n            defaultOptions={{ styles: mapStyles }}\n        >\n            {this.context.locations.results.map((result , i)=> (\n            <Marker\n                key={result.i}\n                position={{\n                lat: result.geometry.location.lat,\n                lng: result.geometry.location.lng\n                }}\n                onClick={() => {\n                    this.setState({selected:result});\n                  }}\n                icon={{\n                url: \"https://img.icons8.com/cotton/64/000000/dog-jump--v1.png\",\n                scaledSize: new window.google.maps.Size(25, 25)\n                }}\n            /> \n            ))} \n        {this.state.selected && this.state.selected.geometry && (\n        <InfoWindow\n          onCloseClick={() => {\n            this.setState({selected:null});\n        }}\n          position={{\n\n            lat: this.state.selected.geometry.location.lat,\n            lng: this.state.selected.geometry.location.lng\n          }}\n        >\n          <div>\n            <h2>{this.state.selected.name}</h2>\n            <p>{this.state.selected.formatted_address}</p>\n          </div>\n        </InfoWindow>\n      )}\n        </GoogleMap>\n        : null }\n        </div>\n     );\n    }\n  }\n  \n\nconst MapWrapped  = withScriptjs(withGoogleMap(Map))\n \nexport default MapWrapped;","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/config.js",["106"],"export default {\n    API_ENDPOINT: 'https://still-basin-86782.herokuapp.com',\n    API_TOKEN_KEY: 'doggo-client-auth-token',\n    key: process.env.key || 'AIzaSyAZ9e8yrmg_qJFoBB7Giz4ZKzQNPl7fDm4'\n}",["107","108"],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/App.js",["109","110"],"import LoginPage from './loginSignup/login-page';\nimport SignUp from './loginSignup/sign-up';\nimport {Route} from 'react-router-dom';\nimport MapWrapped from './map/map';\nimport Favorites from './favorites/favorites';\nimport './map/map.css';\nimport Recommend from './recommend/recommend';\nimport DoggoContext from './context';\nimport React from 'react';\nimport SearchForm from './search/search';\nimport LogOut from './loginSignup/logout';\nimport TokenService from './client-services/token';\nimport config from './config';\nimport { withRouter } from 'react-router-dom';\nimport './App.css';\n\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      places : [],\n      user_name: '',\n      savedSpots : [],\n      detailsToDisplay: [],\n      currentZip: ''\n    }\n  }\n\n  componentDidMount( ){\n\n    let user_name = localStorage.getItem('user_name')\n    \n    this.setState({user_name:user_name})\n\n    fetch(`${config.API_ENDPOINT}/api/${user_name}/dashboard`, {\n      headers: {\n        'session_token':`${TokenService.getAuthToken()}`\n      }\n    })\n    .then(res => {\n      if(!res.ok){\n        return res.json().then(e => Promise.reject(e))\n      }\n      console.log(res)\n      return res.json()\n    })\n\n    .then(spots => {\n      console.log(spots)\n      \n      this.setUserSpots(spots)\n    })\n    .catch(error => {\n      alert('You must be logged in to continue')\n      this.props.history.push('/login')\n    })\n  }\n\n  getPlaces = (places) => {\n    this.setState({places: places })\n  }\n\n  updateUserName = (user) => {\n    this.setState({user_name: user})\n    \n  }\n\n  setUserSpots = spots => {\n    this.setState({savedSpots : spots})\n\n  }\n\n\n  addToSaved = (spot) => {\n    this.setState({ savedSpots: [...this.state.savedSpots, spot]})\n  }\n\n  deleteSpot = (id) => {\n    const { savedSpots } = this.state\n \n    this.setState({\n      savedSpots: savedSpots.filter (spot => {\n        return spot.id !== id\n      })\n    })\n\n  }\n\n  setCurrentZip = (zip) => {\n    this.setState({currentZip: zip})\n\n  }\n\n  render(){\n\n    const contextValues = {\n      locations: this.state.places,\n      setLocations : this.getPlaces,\n      user_name : this.state.user_name,\n      setUserName : this.updateUserName,\n      savedSpots : this.state.savedSpots,\n      addToSaved : this.addToSaved,\n      setUserSpots : this.setUserSpots,\n      deleteSpot : this.deleteSpot,\n      currentZip: this.state.currentZip,\n      setCurrentZip: this.setCurrentZip      \n    }\n  \n\n  return (\n\n    <DoggoContext.Provider value={contextValues}>\n\n    <div className=\"App\">\n      <Route exact path='/login' component={LoginPage} />\n      <Route path='/sign-up' component={SignUp} />\n      <Route path='/search' component={SearchForm} />\n      <div className = \"dashboard-view\">\n      <Route path='/dashboard' component={Favorites} />\n      </div>\n      <Route path='/recommend' component={Recommend} />\n    </div>\n    </ DoggoContext.Provider >\n\n    )\n\n  } \n}\n\n\nexport default withRouter(App);\n","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/results/result.js",["111","112"],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/loginSignup/sign-up.js",["113","114"],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/favorites/favorites.js",[],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/sidebar/sidebar.js",[],["115","116"],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/loginSignup/logout.js",[],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/recommend/recommend.js",["117"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Sidebar from '../sidebar/sidebar'\nimport LogOut from '../loginSignup/logout'\nimport config from '../config'\nimport TokenService from '../client-services/token';\nimport './recommend.css';\n\n\n\n\nexport default class Recommend extends React.Component {\n\n    state = {\n        submit: false \n    }\n\n    componentDidMount(){\n        const token = TokenService.getAuthToken();\n        const options = {\n            method : 'GET',\n            headers : {\n                'session_token' : token\n            }\n        }\n\n        fetch( `${config.API_ENDPOINT}/api/validate`, options )\n            .then( response => {\n                if( response.ok ){\n                    return response.json();\n                }\n\n                throw new Error( response.statusText );\n            })\n            .then( responseJson => {\n                this.setState({\n                    message : responseJson.message\n                })\n            })\n            .catch( err => {\n                console.log( err.message );\n                this.props.history.push( '/login' );\n            });\n    }\n\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        \n\n        this.setState({submit : true});\n\n\n    }\n\n\n    handleLogOut = () => {\n\n        TokenService.clearAuthToken()\n        console.log(this.props)\n        this.props.history.push('/login')\n\n    }\n\n    render(){\n\n        return(\n            <div className = \"recommend-container1\">\n            <Sidebar className = \"side-bar\" width={300} height={\"100vh\"}>\n            <br></br>\n            <Link className = \"link1-button\" to ='./search'>Doggo Search</Link>\n            <br></br>\n            <br></br>\n            <br></br>\n            <Link className = \"link2-button\" to ='./dashboard'>My Dashboard</Link>\n            <br></br>\n            <button className=\"log-out-button\" onClick = {this.handleLogOut}>Log out</button>\n            </Sidebar>\n            <div className = \"recommend-container2\">\n            <h1 className = \"form-title\">Recommend A DoggoSpot</h1>\n            <h3 className = \"form-title\">Help DoggosWelcome grow its directory and make the world a more dog-friendly place</h3>\n            <form className ='recommend-form-container' onSubmit = {this.handleSubmit} >        \n                <label className= \"recommend-label\"  for=\"type\">Name:</label>\n                <input className = \"fetch-input\" type=\"text\" id=\"name\" name=\"name\" placeholder=\"Paw Haven\"  required/>                \n                <label className= \"recommend-label\"  for=\"type\">Type Of Business:</label>\n                <select   className = \"fetch-input \" name=\"type\" id=\"type\">\n                <option value=\"Pet Supplies\">Pet Supplies</option>\n                <option value=\"Parks\">Park</option>\n                <option value=\"Bars\">Bar</option>\n                <option value=\"Restaurants\">Restaurant</option> \n                <option value=\"Veterinarian Services\">Veterinarian Services</option>\n                <option value=\"Dog Beaches\">Dog Beach</option>\n                <option value=\"Other\">Other</option>\n                </select>                 \n                <label className= \"recommend-label\" for=\"address\" >Address (Please include Street Address, City, State and Zip):</label>\n                <textarea className = \"fetch-input\" type=\"text\" id=\"address\" name=\"address\" placeholder=\"123 Fluffy Lane, Brooklyn, NY 11201\" required />               \n                <input type=\"submit\" value=\"Recommend\" className=\"recommend-button\" />\n                </form>\n                <div> {this.state.submit ? <p className = \"result-text\">Your recommendation was successfully submitted. It will be reviewed by our Doggo Administrator. Thank you!</p> : null}</div>\n                </div>\n                </div>\n        )\n    }\n}","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/favorites/favorite.js",["118","119","120","121"],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/client-services/token.js",[],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/client-services/auth-api-service.js",[],["122","123"],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/index.js",[],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/map/mapStyles.js",["124"],"export default [\n    {\n      featureType: \"water\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          color: \"#004367\"\n        }\n      ]\n    },\n    {\n      featureType: \"landscape\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          color: \"#1f8a70\"\n        }\n      ]\n    },\n    {\n      featureType: \"poi\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          color: \"#1f8a70\"\n        }\n      ]\n    },\n    {\n      featureType: \"road.highway\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          color: \"#979100\"\n        }\n      ]\n    },\n    {\n      featureType: \"road.arterial\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          color: \"#1f8a70\"\n        },\n        {\n          lightness: -20\n        }\n      ]\n    },\n    {\n      featureType: \"road.local\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          color: \"#1f8a70\"\n        },\n        {\n          lightness: -17\n        }\n      ]\n    },\n    {\n      elementType: \"labels.text.stroke\",\n      stylers: [\n        {\n          color: \"#ffffff\"\n        },\n        {\n          visibility: \"on\"\n        },\n        {\n          weight: 0.9\n        }\n      ]\n    },\n    {\n      elementType: \"labels.text.fill\",\n      stylers: [\n        {\n          visibility: \"on\"\n        },\n        {\n          color: \"#ffffff\"\n        }\n      ]\n    },\n    {\n      featureType: \"poi\",\n      elementType: \"labels\",\n      stylers: [\n        {\n          visibility: \"simplified\"\n        }\n      ]\n    },\n    {\n      elementType: \"labels.icon\",\n      stylers: [\n        {\n          visibility: \"off\"\n        }\n      ]\n    },\n    {\n      featureType: \"transit\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          color: \"#1f8a70\"\n        },\n        {\n          lightness: -10\n        }\n      ]\n    },\n    {},\n    {\n      featureType: \"administrative\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          color: \"#1f8a70\"\n        },\n        {\n          weight: 0.6\n        }\n      ]\n    }\n  ];\n  ",{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":14},{"ruleId":"129","severity":1,"message":"133","line":6,"column":8,"nodeType":"131","messageId":"132","endLine":6,"endColumn":14},{"ruleId":"134","severity":1,"message":"135","line":59,"column":39,"nodeType":"136","messageId":"137","endLine":59,"endColumn":41},{"ruleId":"129","severity":1,"message":"138","line":7,"column":8,"nodeType":"131","messageId":"132","endLine":7,"endColumn":18},{"ruleId":"129","severity":1,"message":"133","line":10,"column":8,"nodeType":"131","messageId":"132","endLine":10,"endColumn":14},{"ruleId":"139","severity":1,"message":"140","line":150,"column":76,"nodeType":"141","endLine":150,"endColumn":213},{"ruleId":"129","severity":1,"message":"142","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":15},{"ruleId":"129","severity":1,"message":"143","line":3,"column":8,"nodeType":"131","messageId":"132","endLine":3,"endColumn":14},{"ruleId":"129","severity":1,"message":"144","line":7,"column":8,"nodeType":"131","messageId":"132","endLine":7,"endColumn":14},{"ruleId":"125","replacedBy":"145"},{"ruleId":"127","replacedBy":"146"},{"ruleId":"129","severity":1,"message":"147","line":1,"column":8,"nodeType":"131","messageId":"132","endLine":1,"endColumn":18},{"ruleId":"129","severity":1,"message":"148","line":2,"column":8,"nodeType":"131","messageId":"132","endLine":2,"endColumn":15},{"ruleId":"129","severity":1,"message":"130","line":3,"column":9,"nodeType":"131","messageId":"132","endLine":3,"endColumn":13},{"ruleId":"129","severity":1,"message":"149","line":5,"column":17,"nodeType":"131","messageId":"132","endLine":5,"endColumn":25},{"ruleId":"129","severity":1,"message":"150","line":5,"column":27,"nodeType":"131","messageId":"132","endLine":5,"endColumn":36},{"ruleId":"129","severity":1,"message":"151","line":5,"column":38,"nodeType":"131","messageId":"132","endLine":5,"endColumn":48},{"ruleId":"152","severity":1,"message":"153","line":1,"column":1,"nodeType":"154","endLine":5,"endColumn":2},{"ruleId":"125","replacedBy":"155"},{"ruleId":"127","replacedBy":"156"},{"ruleId":"129","severity":1,"message":"138","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":18},{"ruleId":"129","severity":1,"message":"133","line":11,"column":8,"nodeType":"131","messageId":"132","endLine":11,"endColumn":14},{"ruleId":"129","severity":1,"message":"130","line":2,"column":9,"nodeType":"131","messageId":"132","endLine":2,"endColumn":13},{"ruleId":"129","severity":1,"message":"157","line":124,"column":57,"nodeType":"131","messageId":"132","endLine":124,"endColumn":59},{"ruleId":"129","severity":1,"message":"130","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":14},{"ruleId":"139","severity":1,"message":"140","line":60,"column":21,"nodeType":"141","endLine":60,"endColumn":113},{"ruleId":"125","replacedBy":"158"},{"ruleId":"127","replacedBy":"159"},{"ruleId":"129","severity":1,"message":"133","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":14},{"ruleId":"129","severity":1,"message":"130","line":3,"column":10,"nodeType":"131","messageId":"132","endLine":3,"endColumn":14},{"ruleId":"129","severity":1,"message":"148","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":15},{"ruleId":"129","severity":1,"message":"157","line":45,"column":24,"nodeType":"131","messageId":"132","endLine":45,"endColumn":26},{"ruleId":"129","severity":1,"message":"160","line":45,"column":42,"nodeType":"131","messageId":"132","endLine":45,"endColumn":48},{"ruleId":"125","replacedBy":"161"},{"ruleId":"127","replacedBy":"162"},{"ruleId":"152","severity":1,"message":"163","line":1,"column":1,"nodeType":"154","endLine":129,"endColumn":5},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'LogOut' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'MapWrapped' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Route' is defined but never used.","'SignUp' is defined but never used.","'config' is defined but never used.",["164"],["165"],"'SearchForm' is defined but never used.","'Sidebar' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useContext' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["164"],["165"],"'id' is assigned a value but never used.",["164"],["165"],"'rating' is assigned a value but never used.",["164"],["165"],"Assign array to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]