[{"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/context.js":"1","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/results/results.js":"2","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/search/search.js":"3","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/loginSignup/login-page.js":"4","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/map/map.js":"5","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/config.js":"6","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/App.js":"7","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/results/result.js":"8","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/loginSignup/sign-up.js":"9","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/favorites/favorites.js":"10","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/sidebar/sidebar.js":"11","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/loginSignup/logout.js":"12","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/recommend/recommend.js":"13","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/favorites/favorite.js":"14","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/client-services/token.js":"15","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/client-services/auth-api-service.js":"16"},{"size":313,"mtime":1612136174162,"results":"17","hashOfConfig":"18"},{"size":3753,"mtime":1612192402809,"results":"19","hashOfConfig":"18"},{"size":4347,"mtime":1612136262806,"results":"20","hashOfConfig":"18"},{"size":2692,"mtime":1612217838419,"results":"21","hashOfConfig":"18"},{"size":2979,"mtime":1612144241014,"results":"22","hashOfConfig":"18"},{"size":177,"mtime":1612218487963,"results":"23","hashOfConfig":"18"},{"size":3118,"mtime":1612221822170,"results":"24","hashOfConfig":"18"},{"size":4898,"mtime":1612192355185,"results":"25","hashOfConfig":"18"},{"size":2498,"mtime":1612210141031,"results":"26","hashOfConfig":"18"},{"size":2126,"mtime":1611584112059,"results":"27","hashOfConfig":"18"},{"size":841,"mtime":1606937596095,"results":"28","hashOfConfig":"18"},{"size":399,"mtime":1611239838109,"results":"29","hashOfConfig":"18"},{"size":3177,"mtime":1611610959899,"results":"30","hashOfConfig":"18"},{"size":1652,"mtime":1611009750887,"results":"31","hashOfConfig":"18"},{"size":560,"mtime":1612218472580,"results":"32","hashOfConfig":"18"},{"size":1086,"mtime":1610586843527,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jzzm3",{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":2,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/context.js",[],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/results/results.js",["76","77","78"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Result from './result'\nimport MapWrapped from '../map/map'\nimport DoggoContext from '../context'\nimport LogOut from '../loginSignup/logout'\nimport config from '../config'\nimport TokenService from '../client-services/token'\n\n\nexport default class Results extends React.Component {\n\n    static contextType = DoggoContext;\n\n    componentDidMount(){\n        const token = TokenService.getAuthToken();\n        const options = {\n            method : 'GET',\n            headers : {\n                'session_token' : token\n            }\n        }\n\n        fetch( `${config.API_ENDPOINT}/api/validate`, options )\n            .then( response => {\n                if( response.ok ){\n                    return response.json();\n                }\n\n                throw new Error( response.statusText );\n            })\n            .then( responseJson => {\n                this.setState({\n                    message : responseJson.message\n                })\n            })\n            .catch( err => {\n                console.log( err.message );\n                this.props.history.push( '/login' );\n            });\n    }\n\n\n    render(){\n\n    const results = this.context.locations.results\n\n    // console.log(results)\n    // console.log(this.context.currentZip.slice(0,-1))\n    // console.log(this.context.locations.results[0].formatted_address.split(',')[2].split(' ')[2].slice(0,-1) )\n\n    \n    let revised = () => {\n        \n        if(!results){\n            return 'No Results Found - Please try a different zip'\n        }       \n        else {\n\n         return results.filter((result,i) => {\n          //console.log(typeof(result.formatted_address.split(',')[2].split(' ')[2].slice(0,-1)))   \n         //console.log(result.formatted_address.split(',')[2].split(' ')[2].slice(0,-1), this.context.currentZip.slice(0,-1))\n           let zip = this.context.currentZip\n           console.log(result.formatted_address)\n           let zips = result.formatted_address\n           return zips.slice(-20,-16) == zip.slice(0,-1)})\n      \n            }\n        } \n\n    const filteredResults =  revised() \n    console.log('filter results',filteredResults)\n\n     const searchResults = filteredResults.map( (place, i) => {\n\n            return (\n                <ul key = {place.id}>\n                    <li className = {place.id}>\n                     <Result \n                        title = {place.name}\n                        address = {place.formatted_address}\n                        overall_rating = {place.rating}\n                        place_id = {place.place_id}\n                        id ={place.id}\n                     \n                        />\n                    </li>\n                </ul>)\n            \n                }\n\n\n      )\n\n\n             return(\n                 <div>\n                     {filteredResults.length > 0 ?\n                     <div>\n                     <div>{searchResults}</div>\n                     <div style={{ width: \"75vw\", height: \"100vh\" }} className = \"map\"> \n                          <MapWrapped       \n                          googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${config.key}`}\n                          loadingElement={<div style={{ height: \"100%\" }} />}\n                          containerElement={<div style={{ height: \"100%\" }} />}\n                          mapElement={<div style={{ height: \"100%\" }} /> }\n                          />\n                    \n                      </div>\n                      </div>\n                      : 'No results - Please try a different zip'\n                     }\n                     </div>\n                \n             )\n   \n    }\n\n}",["79","80"],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/search/search.js",["81","82"],"import React from 'react';\nimport './search-form.css'\nimport Results from '../results/results'\nimport { Link } from 'react-router-dom';\nimport config from '../config'\nimport DoggoContext from '../context'\nimport MapWrapped from '../map/map';\nimport Sidebar from '../sidebar/sidebar'\nimport TokenService from '../client-services/token'\nimport LogOut from '../loginSignup/logout'\n\n\n\nexport default class SearchForm extends React.Component {\n\n    static contextType = DoggoContext;\n\n\n    constructor(props){\n        super(props)\n        \n        this.zipInput = React.createRef()\n        this.typeInput = React.createRef()\n        \n        this.state = {\n            clicked : false,\n            places : []\n        }\n    }\n\n    componentDidMount(){\n        const token = TokenService.getAuthToken();\n        const options = {\n            method : 'GET',\n            headers : {\n                'session_token' : token\n            }\n        }\n\n        fetch( `${config.API_ENDPOINT}/api/validate`, options )\n            .then( response => {\n                if( response.ok ){\n                    return response.json();\n                }\n\n                throw new Error( response.statusText );\n            })\n            .then( responseJson => {\n                this.setState({\n                    message : responseJson.message\n                })\n            })\n            .catch( err => {\n                console.log( err.message );\n                this.props.history.push( '/login' );\n            });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        const searchValues = {\n            zip: this.zipInput.current.value,\n            type: this.typeInput.current.value   \n        };\n\n        this.context.setCurrentZip(this.zipInput.current.value)\n\n        fetch(`${config.API_ENDPOINT}/api/search`, {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json',\n            'session_token': TokenService.getAuthToken()\n\n        },\n        body: JSON.stringify(searchValues)\n        })\n          .then(res => {\n            if(!res.ok){\n              return res.json().then(e => Promise.reject(e))\n            }\n            \n             return res.json()\n          })\n          .then(places => {\n\n            this.context.setLocations(places)\n            this.setState({\n                clicked : true,\n                places: places} \n            );\n\n\n          })\n          .catch(error => {\n            this.context.setLocations({ results: [] })\n\n              console.log(error)\n        })\n\n\n    }\n\n    render(){\n        return(\n                <div>\n                <Sidebar width={300} height={\"100vh\"}>\n                <Link to ='./dashboard'>Your Dashboard</Link>\n                <br></br>\n                <br></br>\n                <Link to ='./recommend'>Recommend A Business</Link>\n                </Sidebar>\n                <h1>Begin Your Search</h1>\n                <form className ='form-container' onSubmit={this.handleSubmit}>\n                <div className = \"input\">       \n                <label for=\"fname\" >5 Digit Zip Code (US Only):</label>\n                <input ref = {this.zipInput} type=\"text\" id=\"zip\" name=\"zip\" defaultValue = \"10011\"/>\n                </div>\n                <div className = \"input\"> \n                <label for=\"type\">Type of Activity:</label>\n                <select ref = {this.typeInput} name=\"type\" id=\"type\">\n                <option value=\"Parks\">Parks</option>\n                <option value=\"Bars\">Bars</option>\n                <option value=\"Restaurants\">Restaurants</option>\n                <option value=\"Pet Supplies\">Pet Supplies</option>\n                <option value=\"Veterinarian Services\">Veterinarian Services</option>\n                <option value=\"Dog Beaches\">Beaches</option>\n                <option value=\"Pet Hotels\">Hotels</option>\n                <option value=\"Groomers\">Groomers</option>\n                <option value=\"Hiking Trails\"> Hiking Trails</option>\n                <option value=\"Brunch\">Brunch Spots</option>\n\n\n\n\n\n                </select>\n                </div>\n                <input type=\"submit\" value=\"Fetch!\" className=\"button\" />\n                </form>\n                <div className = \"results\"> {this.state.clicked ? <Results /> : null}</div>\n\n               \n                </div>\n        )\n    }\n}\n","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/loginSignup/login-page.js",["83","84","85","86","87"],"import React from 'react'\nimport { Route, Link } from 'react-router-dom'\nimport SignUp from './sign-up'\nimport AuthApiService from '../client-services/auth-api-service'\nimport TokenService from '../client-services/token'\nimport DoggoContext from '../context'\nimport config from '../config'\nimport './login.css'\n\nexport default class LoginPage extends React.Component {\n\n    static contextType = DoggoContext;\n\n    static defaultProps = {\n        onValidLogin: () => {}\n    };\n\n    constructor(props) {\n        super(props);\n        this.userInput = React.createRef();\n        this.passInput = React.createRef();\n        this.state = {error: null};\n    };\n\n    // handle login authentication and validation on submit. //\n    handleJwtLoginAuth = e => {\n        e.preventDefault();\n       \n     \n        AuthApiService.postLogin({\n            user_name: this.userInput.current.value,\n            password: this.passInput.current.value \n        })\n        .then(res => {\n        \n            this.context.setUserName(this.userInput.current.value)\n            localStorage.setItem( 'user_name', this.userInput.current.value );\n            \n            TokenService.saveAuthToken(res.token);\n            this.props.onValidLogin(); \n\n            })\n                \n           \n        .then(() => {\n            this.props.history.push('/search')})\n            \n        .catch(res => {\n            this.setState({\n            error: alert(\"Invalid username or password. Please re-enter your credentials.\")\n                });\n            });\n    \n    }\n\n\n    render() {\n\n          return(\n            <div className=\"container\">\n                <div className=\"left\">\n                    <div className=\"header\">\n                    <h2 className=\"animation a1\">DoggosWelcome</h2>\n                    <h4 className=\"animation a2\">Explore over thousands of dog-friendly places to stay, play, and eat with your dog! <br/><br/> Log in to get started</h4>\n                    </div>\n                    <form className=\"login-form\" onSubmit={this.handleJwtLoginAuth}>\n                    <input type=\"text\" ref = {this.userInput}  name=\"user\" id=\"user\" className=\"form-field animation a3\" placeholder=\"Username\"/>\n                    <input type=\"password\" ref = {this.passInput} name=\"password\" id=\"password\" className=\"form-field animation a4\" placeholder=\"Password\"/>\n                    <button className=\"animation a6\">LOGIN</button>\n                    </form>\n                    <Link to = '/sign-up'>New User? Sign up here</Link>\n                </div>\n                <div className=\"right\"></div>\n            </div>\n                                  \n              \n\n\n\n\n\n        )\n    }\n\n\n}\n","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/map/map.js",["88","89","90","91","92","93"],"import SearchForm from '../search/search'\nimport Sidebar from '../sidebar/sidebar'\nimport {Link} from 'react-router-dom'\nimport DoggoContext from '../context'\nimport React, { useState, useEffect, useContext } from \"react\";\nimport {\n  withGoogleMap,\n  withScriptjs,\n  GoogleMap,\n  Marker,\n  InfoWindow\n} from \"react-google-maps\";\nimport mapStyles from \"./mapStyles\";\nimport config from '../config';\nimport TokenService from '../client-services/token'\n \n \nclass Map extends React.Component {\n    static contextType = DoggoContext\n\n    state = {\n        selected : {}\n        \n    }\n\n    componentDidMount(){\n      const token = TokenService.getAuthToken();\n      const options = {\n          method : 'GET',\n          headers : {\n              'session_token' : token\n          }\n      }\n\n      fetch( `${config.API_ENDPOINT}/api/validate`, options )\n          .then( response => {\n              if( response.ok ){\n                  return response.json();\n              }\n\n              throw new Error( response.statusText );\n          })\n          .then( responseJson => {\n              this.setState({\n                  message : responseJson.message\n              })\n          })\n          .catch( err => {\n              console.log( err.message );\n              this.props.history.push( '/login' );\n          });\n  }\n\n\n\n    render(){\n\n   \n  \n    return (\n        <div>\n          {this.context.locations ?\n        <GoogleMap\n            defaultZoom={12}\n            initialCenter={{lat:39.011902,lng:-98.484245}}\n            center={{lat:this.context.locations.results[0].geometry.location.lat, lng:this.context.locations.results[0].geometry.location.lng}}\n            defaultOptions={{ styles: mapStyles }}\n        >\n            {this.context.locations.results.map((result , i)=> (\n            <Marker\n                key={result.i}\n                position={{\n                lat: result.geometry.location.lat,\n                lng: result.geometry.location.lng\n                }}\n                onClick={() => {\n                    this.setState({selected:result});\n                  }}\n                icon={{\n                url: \"https://img.icons8.com/cotton/64/000000/dog-jump--v1.png\",\n                scaledSize: new window.google.maps.Size(25, 25)\n                }}\n            /> \n            ))} \n        {this.state.selected && this.state.selected.geometry && (\n        <InfoWindow\n          onCloseClick={() => {\n            this.setState({selected:null});\n        }}\n          position={{\n\n            lat: this.state.selected.geometry.location.lat,\n            lng: this.state.selected.geometry.location.lng\n          }}\n        >\n          <div>\n            <h2>{this.state.selected.name}</h2>\n            <p>{this.state.selected.formatted_address}</p>\n          </div>\n        </InfoWindow>\n      )}\n        </GoogleMap>\n        : null }\n        </div>\n     );\n    }\n  }\n  \n\nconst MapWrapped  = withScriptjs(withGoogleMap(Map))\n \nexport default MapWrapped;","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/config.js",["94"],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/App.js",["95","96"],"import LoginPage from './loginSignup/login-page';\nimport SignUp from './loginSignup/sign-up';\nimport {Route} from 'react-router-dom';\nimport MapWrapped from './map/map';\nimport Favorites from './favorites/favorites';\nimport './map/map.css';\nimport Recommend from './recommend/recommend';\nimport DoggoContext from './context';\nimport React from 'react';\nimport SearchForm from './search/search';\nimport StarRating from './favorites/rating';\nimport LogOut from './loginSignup/logout';\nimport TokenService from './client-services/token';\nimport config from './config';\nimport { withRouter } from 'react-router-dom';\n\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      places : [],\n      user_name: '',\n      savedSpots : [],\n      detailsToDisplay: [],\n      currentZip: ''\n    }\n  }\n\n  componentDidMount( ){\n\n    let user_name = localStorage.getItem('user_name')\n    \n    this.setState({user_name:user_name})\n\n    fetch(`${config.API_ENDPOINT}/api/${user_name}/dashboard`, {\n      headers: {\n        'session_token':`${TokenService.getAuthToken()}`\n      }\n    })\n    .then(res => {\n      if(!res.ok){\n        return res.json().then(e => Promise.reject(e))\n      }\n      console.log(res)\n      return res.json()\n    })\n\n    .then(spots => {\n      console.log(spots)\n      \n      this.setUserSpots(spots)\n    })\n    .catch(error => {\n      alert('You must be logged in to continue')\n      this.props.history.push('/login')\n    })\n  }\n\n  getPlaces = (places) => {\n    this.setState({places: places })\n  }\n\n  updateUserName = (user) => {\n    this.setState({user_name: user})\n    \n  }\n\n  setUserSpots = spots => {\n    this.setState({savedSpots : spots})\n\n  }\n\n\n  addToSaved = (spot) => {\n    this.setState({ savedSpots: [...this.state.savedSpots, spot]})\n  }\n\n  deleteSpot = (id) => {\n    const { savedSpots } = this.state\n \n    this.setState({\n      savedSpots: savedSpots.filter (spot => {\n        return spot.id !== id\n      })\n    })\n\n  }\n\n  setCurrentZip = (zip) => {\n    this.setState({currentZip: zip})\n\n  }\n\n  render(){\n\n    const contextValues = {\n      locations: this.state.places,\n      setLocations : this.getPlaces,\n      user_name : this.state.user_name,\n      setUserName : this.updateUserName,\n      savedSpots : this.state.savedSpots,\n      addToSaved : this.addToSaved,\n      setUserSpots : this.setUserSpots,\n      deleteSpot : this.deleteSpot,\n      currentZip: this.state.currentZip,\n      setCurrentZip: this.setCurrentZip      \n    }\n  \n\n  return (\n\n    <DoggoContext.Provider value={contextValues}>\n\n    <div className=\"App\">\n      <Route exact path='/login' component={LoginPage} />\n      <Route path='/sign-up' component={SignUp} />\n      <Route path='/search' component={LogOut} />\n      <Route path='/search' component={SearchForm} />\n      <Route path='/dashboard' component={LogOut} />\n      <Route path='/dashboard' component={Favorites} />\n      <Route path='/recommend' component={LogOut} />\n      <Route path='/recommend' component={Recommend} />\n    </div>\n    </ DoggoContext.Provider >\n\n    )\n\n  } \n}\n\n\nexport default withRouter(App);\n","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/results/result.js",["97","98"],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/loginSignup/sign-up.js",["99","100"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport AuthApiService from '../client-services/auth-api-service'\nimport './signup.css'\n\n\n\nexport default class SignUp extends React.Component {\n\n    constructor(props){\n        super(props)\n        this.fNameInput = React.createRef()\n        this.lNameInput = React.createRef()\n        this.userInput = React.createRef()\n        this.passInput = React.createRef()\n    }\n\n    handleNewUser = (e) => {\n        e.preventDefault();\n\n        const newUser = {\n            first_name : this.fNameInput.current.value,\n            last_name: this.lNameInput.current.value,\n            user_name: this.userInput.current.value,\n            password: this.passInput.current.value\n\n        }\n\n        AuthApiService.postUser(newUser)\n        .then(user => {\n            this.fNameInput.current.value = '';\n            this.lNameInput.current.value = '';\n            this.userInput.current.value = '';\n            this.passInput.current.value = '';\n        })\n        .then(() => {\n            this.props.history.push(`/`)\n            window.alert('Registered successfully. Please log in with your new credentials.');\n        })\n        .catch(res => {\n            this.setState({\n                error: window.alert('An unexpected error occurred. Please try again later.')\n            });\n        })\n\n\n\n    }\n\n    render(){\n\n        return(\n            <div class=\"container\">\n                <div class=\"center\">\n                    <div class=\"header\">\n                    <h2 >What are you waiting for? Sign up already!</h2>\n                    <img src = \"https://thumbs.gfycat.com/GrossContentBluemorphobutterfly-size_restricted.gif\"/>\n                    </div>\n                    <form className=\"signup-form\" onSubmit = {this.handleNewUser}>\n                    <input ref = {this.fNameInput} type = 'text' name= 'first_name' id='first_name' class=\"form-field\" placeholder=\"First Name\"/>\n                    <input  ref ={this.lNameInput} type = 'text' name= 'last_name' id='last_name' class=\"form-field\" placeholder=\"Last Name\"/>\n                    <input type=\"text\" ref = {this.userInput}  name=\"user\" id=\"user\" class=\"form-field\" placeholder=\"Username\"/>\n                    <input type=\"password\" ref = {this.passInput} name=\"password\" id=\"password\" class=\"form-field\" placeholder=\"Password\"/>\n                    <button >Sign Up</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n\n\n}","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/favorites/favorites.js",["101","102"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport favorite from './favorite'\nimport DoggoContext from '../context'\nimport Favorite from './favorite';\nimport Sidebar from '../sidebar/sidebar';\nimport LogOut from '../loginSignup/logout'\nimport config from '../config'\nimport TokenService from '../client-services/token'\n\n\n\nexport default class Favorites extends React.Component {\n\n    static contextType = DoggoContext;\n\n    componentDidMount(){\n        const token = TokenService.getAuthToken();\n        const options = {\n            method : 'GET',\n            headers : {\n                'session_token' : token\n            }\n        }\n\n        fetch( `${config.API_ENDPOINT}/api/validate`, options )\n            .then( response => {\n                if( response.ok ){\n                    return response.json();\n                }\n\n                throw new Error( response.statusText );\n            })\n            .then( responseJson => {\n                this.setState({\n                    message : responseJson.message\n                })\n            })\n            .catch( err => {\n                console.log( err.message );\n                this.props.history.push( '/login' );\n            });\n    }\n\n\n   \n\n    render(){\n    \n   \n        let spots = this.context.savedSpots.map((spot , i) => {\n            return (\n                <ul key = {this.context.savedSpots[i].id}>\n                    \n                <li >\n                    <Favorite\n                        title={this.context.savedSpots[i].title}\n                        doggoaddress={this.context.savedSpots[i].doggoaddress}\n                        id={this.context.savedSpots[i].id}\n                      />  \n                </li>\n                \n                </ul>\n\n            )\n        })\n      return (\n        <div> \n            <Sidebar width={300} height={\"100vh\"}>\n            <Link to ='./search'>Doggo Search</Link>\n            <br></br>\n            <br></br>\n            <Link to ='./recommend'>Recommend A Business</Link>\n            </Sidebar>    \n           <div>{spots}</div>\n        </div>  ) \n   \n    }\n\n}","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/sidebar/sidebar.js",[],["103","104"],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/loginSignup/logout.js",[],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/recommend/recommend.js",["105"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Sidebar from '../sidebar/sidebar'\nimport LogOut from '../loginSignup/logout'\nimport config from '../config'\nimport TokenService from '../client-services/token';\n\n\n\n\nexport default class Recommend extends React.Component {\n\n    state = {\n        submit: false \n    }\n\n    componentDidMount(){\n        const token = TokenService.getAuthToken();\n        const options = {\n            method : 'GET',\n            headers : {\n                'session_token' : token\n            }\n        }\n\n        fetch( `${config.API_ENDPOINT}/api/validate`, options )\n            .then( response => {\n                if( response.ok ){\n                    return response.json();\n                }\n\n                throw new Error( response.statusText );\n            })\n            .then( responseJson => {\n                this.setState({\n                    message : responseJson.message\n                })\n            })\n            .catch( err => {\n                console.log( err.message );\n                this.props.history.push( '/login' );\n            });\n    }\n\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        \n\n        this.setState({submit : true});\n\n\n    }\n\n    render(){\n\n        return(\n            <div>\n            <Sidebar width={300} height={\"100vh\"}>\n            <Link to ='./search'>Doggo Search</Link>\n            <br></br>\n            <br></br>\n            <Link to ='./dashboard'>My Dashboard</Link>\n            \n            </Sidebar>\n\n            <form className ='form-container' onSubmit = {this.handleSubmit} >\n                <h1>Recommend A Business To Add To The Doggo Directory</h1>\n                <div className = \"input\"> \n                <label for=\"type\">Name:</label>\n                <input type=\"text\" id=\"name\" name=\"name\" value=\"Paw Haven\" />\n                </div>\n                <div className = \"input\"> \n                <label for=\"type\">Type Of Business:</label>\n                <select name=\"type\" id=\"type\">\n                <option value=\"Pet Supplies\">Pet Supplies</option>\n                <option value=\"Parks\">Park</option>\n                <option value=\"Bars\">Bar</option>\n                <option value=\"Restaurants\">Restaurant</option> \n                <option value=\"Veterinarian Services\">Veterinarian Services</option>\n                <option value=\"Dog Beaches\">Dog Beach</option>\n                <option value=\"Other\">Other</option>\n                </select>   \n                </div>\n                <div className = \"input\">       \n                <label for=\"address\" >Address:</label>\n                <p>Please include Street Address, City, State and Zip</p>\n                <textarea type=\"text\" id=\"address\" name=\"address\" value=\"123 Fluffy Lane, Brooklyn, NY 11201\" />\n                </div>\n                <input type=\"submit\" value=\"Recommend\" className=\"button\" />\n                </form>\n                <div className = \"results\"> {this.state.submit ? <p>Your recommendation was successfully submitted. It will be reviewed by our Doggo Administrator. Thank you!</p> : null}</div>\n                </div>\n        )\n    }\n}","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/favorites/favorite.js",["106","107","108","109","110"],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/client-services/token.js",[],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/client-services/auth-api-service.js",[],{"ruleId":"111","severity":1,"message":"112","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":14},{"ruleId":"111","severity":1,"message":"115","line":6,"column":8,"nodeType":"113","messageId":"114","endLine":6,"endColumn":14},{"ruleId":"116","severity":1,"message":"117","line":66,"column":39,"nodeType":"118","messageId":"119","endLine":66,"endColumn":41},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"111","severity":1,"message":"124","line":7,"column":8,"nodeType":"113","messageId":"114","endLine":7,"endColumn":18},{"ruleId":"111","severity":1,"message":"115","line":10,"column":8,"nodeType":"113","messageId":"114","endLine":10,"endColumn":14},{"ruleId":"111","severity":1,"message":"125","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":15},{"ruleId":"111","severity":1,"message":"126","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":14},{"ruleId":"111","severity":1,"message":"127","line":7,"column":8,"nodeType":"113","messageId":"114","endLine":7,"endColumn":14},{"ruleId":"128","severity":2,"message":"129","line":38,"column":13,"nodeType":"130","messageId":"131","endLine":38,"endColumn":17},{"ruleId":"132","severity":2,"message":"133","line":38,"column":13,"nodeType":"113","messageId":"134","endLine":38,"endColumn":17},{"ruleId":"111","severity":1,"message":"135","line":1,"column":8,"nodeType":"113","messageId":"114","endLine":1,"endColumn":18},{"ruleId":"111","severity":1,"message":"136","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":15},{"ruleId":"111","severity":1,"message":"112","line":3,"column":9,"nodeType":"113","messageId":"114","endLine":3,"endColumn":13},{"ruleId":"111","severity":1,"message":"137","line":5,"column":17,"nodeType":"113","messageId":"114","endLine":5,"endColumn":25},{"ruleId":"111","severity":1,"message":"138","line":5,"column":27,"nodeType":"113","messageId":"114","endLine":5,"endColumn":36},{"ruleId":"111","severity":1,"message":"139","line":5,"column":38,"nodeType":"113","messageId":"114","endLine":5,"endColumn":48},{"ruleId":"140","severity":1,"message":"141","line":1,"column":1,"nodeType":"142","endLine":5,"endColumn":2},{"ruleId":"111","severity":1,"message":"124","line":4,"column":8,"nodeType":"113","messageId":"114","endLine":4,"endColumn":18},{"ruleId":"111","severity":1,"message":"143","line":11,"column":8,"nodeType":"113","messageId":"114","endLine":11,"endColumn":18},{"ruleId":"111","severity":1,"message":"112","line":2,"column":9,"nodeType":"113","messageId":"114","endLine":2,"endColumn":13},{"ruleId":"111","severity":1,"message":"144","line":123,"column":57,"nodeType":"113","messageId":"114","endLine":123,"endColumn":59},{"ruleId":"111","severity":1,"message":"112","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":14},{"ruleId":"145","severity":1,"message":"146","line":57,"column":21,"nodeType":"147","endLine":57,"endColumn":113},{"ruleId":"111","severity":1,"message":"148","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":16},{"ruleId":"111","severity":1,"message":"115","line":7,"column":8,"nodeType":"113","messageId":"114","endLine":7,"endColumn":14},{"ruleId":"120","replacedBy":"149"},{"ruleId":"122","replacedBy":"150"},{"ruleId":"111","severity":1,"message":"115","line":4,"column":8,"nodeType":"113","messageId":"114","endLine":4,"endColumn":14},{"ruleId":"111","severity":1,"message":"112","line":3,"column":10,"nodeType":"113","messageId":"114","endLine":3,"endColumn":14},{"ruleId":"111","severity":1,"message":"136","line":4,"column":8,"nodeType":"113","messageId":"114","endLine":4,"endColumn":15},{"ruleId":"111","severity":1,"message":"143","line":7,"column":8,"nodeType":"113","messageId":"114","endLine":7,"endColumn":18},{"ruleId":"111","severity":1,"message":"144","line":43,"column":24,"nodeType":"113","messageId":"114","endLine":43,"endColumn":26},{"ruleId":"111","severity":1,"message":"151","line":43,"column":42,"nodeType":"113","messageId":"114","endLine":43,"endColumn":48},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'LogOut' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["152"],"no-negated-in-lhs",["153"],"'MapWrapped' is defined but never used.","'Route' is defined but never used.","'SignUp' is defined but never used.","'config' is defined but never used.","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","no-undef","'cono' is not defined.","undef","'SearchForm' is defined but never used.","'Sidebar' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useContext' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'StarRating' is defined but never used.","'id' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'favorite' is defined but never used.",["152"],["153"],"'rating' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]