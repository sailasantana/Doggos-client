[{"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/index.js":"1","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/App.js":"2","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/client-services/token.js":"3","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/client-services/auth-api-service.js":"4","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/map/map.js":"5","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/loginSignup/login-page.js":"6","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/favorites/favorite.js":"7","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/loginSignup/sign-up.js":"8","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/search/search.js":"9","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/results/results.js":"10","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/config.js":"11","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/sidebar/sidebar.js":"12","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/recommend/recommend.js":"13","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/map/mapStyles.js":"14","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/context.js":"15","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/results/result.js":"16","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/favorites/favorites.js":"17","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/favorites/rating.js":"18","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/loginSignup/logout.js":"19","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/welcome/welcome.js":"20"},{"size":266,"mtime":1606353616875,"results":"21","hashOfConfig":"22"},{"size":2234,"mtime":1611581348442,"results":"23","hashOfConfig":"22"},{"size":560,"mtime":1606422856122,"results":"24","hashOfConfig":"22"},{"size":1086,"mtime":1610586843527,"results":"25","hashOfConfig":"22"},{"size":3044,"mtime":1611708985634,"results":"26","hashOfConfig":"22"},{"size":6798,"mtime":1611261144776,"results":"27","hashOfConfig":"22"},{"size":1652,"mtime":1611009750887,"results":"28","hashOfConfig":"22"},{"size":2110,"mtime":1610587301388,"results":"29","hashOfConfig":"22"},{"size":4314,"mtime":1611582016353,"results":"30","hashOfConfig":"22"},{"size":2701,"mtime":1611613855800,"results":"31","hashOfConfig":"22"},{"size":173,"mtime":1611613756598,"results":"32","hashOfConfig":"22"},{"size":841,"mtime":1606937596095,"results":"33","hashOfConfig":"22"},{"size":3177,"mtime":1611610959899,"results":"34","hashOfConfig":"22"},{"size":2054,"mtime":1610725626478,"results":"35","hashOfConfig":"22"},{"size":264,"mtime":1611581359899,"results":"36","hashOfConfig":"22"},{"size":5194,"mtime":1611611598214,"results":"37","hashOfConfig":"22"},{"size":2126,"mtime":1611584112059,"results":"38","hashOfConfig":"22"},{"size":1439,"mtime":1610995717330,"results":"39","hashOfConfig":"22"},{"size":399,"mtime":1611239838109,"results":"40","hashOfConfig":"22"},{"size":2770,"mtime":1611346066216,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1jzzm3",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/index.js",[],["99","100"],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/App.js",["101","102"],"import LoginPage from './loginSignup/login-page';\nimport SignUp from './loginSignup/sign-up';\nimport {Route} from 'react-router-dom';\nimport MapWrapped from './map/map';\nimport Favorites from './favorites/favorites';\nimport './map/map.css';\nimport Recommend from './recommend/recommend';\nimport DoggoContext from './context'\nimport React from 'react';\nimport SearchForm from './search/search'\nimport StarRating from './favorites/rating'\nimport LogOut from './loginSignup/logout'\nimport Welcome from './welcome/welcome'\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      places : [],\n      user_name: '',\n      savedSpots : [],\n      detailsToDisplay: []\n    }\n  }\n\n  getPlaces = (places) => {\n    this.setState({places: places })\n  }\n\n  updateUserName = (user) => {\n    this.setState({user_name: user})\n    \n  }\n\n  setUserSpots = spots => {\n    this.setState({savedSpots : spots})\n\n  }\n\n\n  addToSaved = (spot) => {\n    this.setState({ savedSpots: [...this.state.savedSpots, spot]})\n  }\n\n  deleteSpot = (id) => {\n    const { savedSpots } = this.state\n \n    this.setState({\n      savedSpots: savedSpots.filter (spot => {\n        return spot.id !== id\n      })\n    })\n\n  }\n\n  render(){\n\n    const contextValues = {\n      locations: this.state.places,\n      setLocations : this.getPlaces,\n      user_name : this.state.user_name,\n      setUserName : this.updateUserName,\n      savedSpots : this.state.savedSpots,\n      addToSaved : this.addToSaved,\n      setUserSpots : this.setUserSpots,\n      deleteSpot : this.deleteSpot      \n    }\n  \n\n  return (\n\n    <DoggoContext.Provider value={contextValues}>\n\n    <div className=\"App\">\n    <Route exact path='/' component={Welcome} />\n      <Route exact path='/login' component={LoginPage} />\n      <Route path='/sign-up' component={SignUp} />\n      <Route path='/search' component={LogOut} />\n      <Route path='/search' component={SearchForm} />\n      <Route path='/dashboard' component={LogOut} />\n      <Route path='/dashboard' component={Favorites} />\n      <Route path='/recommend' component={LogOut} />\n      <Route path='/recommend' component={Recommend} />\n    </div>\n    </ DoggoContext.Provider >\n\n    )\n\n  } \n}\n\n\nexport default App;\n",["103","104"],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/client-services/token.js",[],["105","106"],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/client-services/auth-api-service.js",[],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/map/map.js",["107","108","109","110","111","112"],"import SearchForm from '../search/search'\nimport Sidebar from '../sidebar/sidebar'\nimport {Link} from 'react-router-dom'\nimport DoggoContext from '../context'\nimport React, { useState, useEffect, useContext } from \"react\";\nimport {\n  withGoogleMap,\n  withScriptjs,\n  GoogleMap,\n  Marker,\n  InfoWindow\n} from \"react-google-maps\";\nimport mapStyles from \"./mapStyles\";\nimport config from '../config';\nimport TokenService from '../client-services/token'\n \n \nclass Map extends React.Component {\n    //const context = useContext(DoggoContext)\n    //const [selected, setSelected] = useState(null);\n    static contextType = DoggoContext\n\n    state = {\n        selected : {}\n        \n    }\n\n    componentDidMount(){\n      const token = TokenService.getAuthToken();\n      const options =Â {\n          method : 'GET',\n          headers : {\n              'session_token' : token\n          }\n      }\n\n      fetch( `${config.API_ENDPOINT}/api/validate`, options )\n          .then( response => {\n              if( response.ok ){\n                  return response.json();\n              }\n\n              throw new Error( response.statusText );\n          })\n          .then( responseJson => {\n              this.setState({\n                  message : responseJson.message\n              })\n          })\n          .catch( err => {\n              console.log( err.message );\n              this.props.history.push( '/login' );\n          });\n  }\n\n\n\n    render(){\n\n      console.log(this.state.selected)\n   \n  \n    return (\n        <div>\n          {this.context.locations ?\n        <GoogleMap\n            defaultZoom={12}\n            defaultCenter={{lat:this.context.locations.results[0].geometry.location.lat, lng:this.context.locations.results[0].geometry.location.lng}}\n            defaultOptions={{ styles: mapStyles }}\n        >\n            {this.context.locations.results.map((result , i)=> (\n            <Marker\n                key={result.i}\n                position={{\n                lat: result.geometry.location.lat,\n                lng: result.geometry.location.lng\n                }}\n                onClick={() => {\n                    this.setState({selected:result});\n                  }}\n                icon={{\n                url: \"https://img.icons8.com/cotton/64/000000/dog-jump--v1.png\",\n                scaledSize: new window.google.maps.Size(25, 25)\n                }}\n            /> \n            ))} \n        {this.state.selected.geometry && (\n        <InfoWindow\n          onCloseClick={() => {\n            this.setState({selected:null});\n        }}\n          position={{\n\n            lat: this.state.selected.geometry.location.lat,\n            lng: this.state.selected.geometry.location.lng\n          }}\n        >\n          <div>\n            <h2>{this.state.selected.name}</h2>\n            <p>{this.state.selected.formatted_address}</p>\n          </div>\n        </InfoWindow>\n      )}\n        </GoogleMap>\n        : null }\n        </div>\n     );\n    }\n  }\n  \n\nconst MapWrapped  = withScriptjs(withGoogleMap(Map))\n \nexport default MapWrapped;","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/loginSignup/login-page.js",["113","114","115","116"],"import React from 'react'\nimport { Route, Link } from 'react-router-dom'\nimport SignUp from './sign-up'\nimport AuthApiService from '../client-services/auth-api-service'\nimport TokenService from '../client-services/token'\nimport DoggoContext from '../context'\nimport config from '../config'\nimport './login-signup.css'\n\nexport default class LoginPage extends React.Component {\n\n    static contextType = DoggoContext;\n\n    static defaultProps = {\n        onValidLogin: () => {}\n    };\n\n    constructor(props) {\n        super(props);\n        this.userInput = React.createRef();\n        this.passInput = React.createRef();\n        this.state = {error: null};\n    };\n\n    // handle login authentication and validation on submit. //\n    handleJwtLoginAuth = e => {\n        e.preventDefault();\n        //console.log(this.userInput.current.value)\n        //console.log(this.passInput.current.value)\n     \n        AuthApiService.postLogin({\n            user_name: this.userInput.current.value,\n            password: this.passInput.current.value \n        })\n        .then(res => {\n        \n        //you need a return here to trigger the next .then\n            this.context.setUserName(this.userInput.current.value)\n            console.log(res)\n            TokenService.saveAuthToken(res.token);\n            this.props.onValidLogin(); \n\n\n\n            console.log(`${config.API_ENDPOINT}/api/${this.userInput.current.value}/dashboard`)\n            fetch(`${config.API_ENDPOINT}/api/${this.userInput.current.value}/dashboard`, {\n                headers: {\n                  'session_token':`${TokenService.getAuthToken()}`\n                }\n              })\n              .then(res => {\n                if(!res.ok){\n                  return res.json().then(e => Promise.reject(e))\n                }\n                return res.json()\n              })\n\n              .then(spots => {\n                console.log(spots)\n                this.context.setUserSpots(spots)\n              })\n              .catch(error => {\n                alert({error})\n              })\n\n            })\n                \n           \n        .then(() => {\n            console.log(this.props.history)\n            this.props.history.push('/search')})\n            \n        .catch(res => {\n            this.setState({\n            error: alert(\"Invalid username or password. Please re-enter your credentials.\")\n                });\n            });\n    \n    }\n\n\n    render() {\n\n          return(\n            <div className=\"section\">\n            <div className=\"container\">\n\n                <div className=\"row full-height justify-content-center\">\n                    <div className=\"col-12 text-center align-self-center py-5\">\n                        <div className=\"section pb-5 pt-5 pt-sm-2 text-center\">\n                            <h6 className=\"mb-0 pb-3\"><span>Log In </span><span>Sign Up</span></h6>\n                              <input className=\"checkbox\" type=\"checkbox\" id=\"reg-log\" name=\"reg-log\"/>\n                              <label for=\"reg-log\"></label>\n                            <div className=\"card-3d-wrap mx-auto\">\n                                <div className=\"card-3d-wrapper\">\n                                    <div className=\"card-front\">\n                                        <div className=\"center-wrap\">\n                                            <div className=\"section text-center\">\n                                                <h4 className=\"mb-4 pb-3\">Log In</h4>\n                                                <form onSubmit={this.handleJwtLoginAuth}>\n                                                <div className=\"form-group\">\n                                                    <input type=\"text\" ref = {this.userInput}  name=\"user\" id=\"user\" className=\"form-style\" placeholder=\"Your Username\"  autocomplete=\"off\"/>\n                                                    <i className=\"input-icon uil uil-at\"></i>\n                                                </div>\t\n                                                <div className=\"form-group mt-2\">\n                                                    <input type=\"password\" ref = {this.passInput} name=\"password\" id=\"password\" className=\"form-style\" placeholder=\"Your Password\" i autocomplete=\"off\"/>\n                                                    <i className=\"input-icon uil uil-lock-alt\"></i>\n                                                </div>\n                                                <button className=\"btn mt-4\">submit</button>\n                                                </form>\n                                              </div>\n                                          </div>\n                                      </div>\n                                    <div className=\"card-back\">\n                                        <div className=\"center-wrap\">\n                                            <div className=\"section text-center\">\n                                                <h4 className=\"mb-4 pb-3\">Sign Up</h4>\n                                               <form>\n                                                <div className=\"form-group\">\n                                                    <input type=\"text\" name=\"logname\" className=\"form-style\" placeholder=\"Your Full Name\" id=\"logname\" autocomplete=\"off\"/>\n                                                    <i className=\"input-icon uil uil-user\"></i>\n                                                </div>\t\n                                                <div className=\"form-group mt-2\">\n                                                    <input type=\"email\" name=\"logemail\" className=\"form-style\" placeholder=\"Your Email\" id=\"logemail\" autocomplete=\"off\"/>\n                                                    <i className=\"input-icon uil uil-at\"></i>\n                                                </div>\t\n                                                <div className=\"form-group mt-2\">\n                                                    <input type=\"password\" name=\"logpass\" className=\"form-style\" placeholder=\"Your Password\" id=\"logpass\" autocomplete=\"off\"/>\n                                                    <i className=\"input-icon uil uil-lock-alt\"></i>\n                                                </div>\n                                                <a href=\"#\" className=\"btn mt-4\">submit</a>\n                                                </form> \n                                              </div>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n            </div>\n        </div>\n\n\n\n\n\n        )\n    }\n\n\n}\n","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/favorites/favorite.js",["117","118","119","120","121"],"import React from 'react';\nimport './favorite.css'\nimport { Link } from 'react-router-dom';\nimport Sidebar from '../sidebar/sidebar'\nimport DoggoContext from '../context'\nimport config from '../config'\nimport StarRating from './rating'\nimport TokenService from '../client-services/token';\n\n\n\nexport default class Favorite extends React.Component {\n\n    static contextType = DoggoContext;\n\n    handleDelete = (e) => {\n        const id = this.props.id;\n\n  \n        fetch(`${config.API_ENDPOINT}/api/${this.context.user_name}/dashboard/${id}`, {\n          method: 'DELETE',\n          headers: {\n            'content-type': 'application/json',\n            'session_token': TokenService.getAuthToken()\n          },\n        })\n        .then (res => {\n          if (!res.ok) {\n            return res.json().then(e => Promise.reject(e));\n          }\n          return null;\n        })\n        .then(() => {\n          this.context.deleteSpot(id);\n        })\n        .catch(error => {\n          console.error({error});\n        });\n\n    }\n\n    render () {  \n        const {title , id, doggoaddress, rating} = this.props; \n        console.log(this.props)\n  \n        return (\n          <div className='Spot'>\n  \n            <h2 className='Spot_title'>\n              \n                {title}\n            \n            </h2>\n            <p className='Spot_address'>\n              \n              {doggoaddress}\n          \n          </p>\n\n\n  \n            <button \n              className='Spot_delete' \n              type='button'\n              onClick={this.handleDelete}>\n              Remove\n  \n            </button>\n  \n           \n          </div>\n        )\n      }\n}","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/loginSignup/sign-up.js",["122"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport AuthApiService from '../client-services/auth-api-service'\n\n\n\nexport default class SignUp extends React.Component {\n\n    constructor(props){\n        super(props)\n        this.fNameInput = React.createRef()\n        this.lNameInput = React.createRef()\n        this.userInput = React.createRef()\n        this.passInput = React.createRef()\n    }\n\n    handleNewUser = (e) => {\n        e.preventDefault();\n\n        const newUser = {\n            first_name : this.fNameInput.current.value,\n            last_name: this.lNameInput.current.value,\n            user_name: this.userInput.current.value,\n            password: this.passInput.current.value\n\n        }\n\n        AuthApiService.postUser(newUser)\n        .then(user => {\n            this.fNameInput.current.value = '';\n            this.lNameInput.current.value = '';\n            this.userInput.current.value = '';\n            this.passInput.current.value = '';\n        })\n        .then(() => {\n            this.props.history.push(`/`)\n            window.alert('Registered successfully. Please log in with your new credentials.');\n        })\n        .catch(res => {\n            this.setState({\n                error: window.alert('An unexpected error occurred. Please try again later.')\n            });\n        })\n\n\n\n    }\n\n    render(){\n\n        return(\n            <div>\n                <form onSubmit = {this.handleNewUser}>\n                    <h2>Sign Up</h2>\n                    <label>First Name</label>\n                    <input ref = {this.fNameInput} type = 'text' name= 'first_name'/>\n                    <label>Last Name</label>\n                    <input ref ={this.lNameInput} type = 'text' name= 'last_name'/>\n                    <label>Username</label>\n                    <input ref ={this.userInput} type = 'text' name= 'user_name'/>\n                    <label>Password</label>\n                    <input ref = {this.passInput} type = 'password' name= 'password'/>\n                    <button>Sign Up</button>\n\n                </form>\n            </div>\n        )\n    }\n\n\n}",["123","124"],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/search/search.js",["125","126"],"import React from 'react';\nimport './search-form.css'\nimport Results from '../results/results'\nimport { Link } from 'react-router-dom';\nimport config from '../config'\nimport DoggoContext from '../context'\nimport MapWrapped from '../map/map';\nimport Sidebar from '../sidebar/sidebar'\nimport TokenService from '../client-services/token'\nimport LogOut from '../loginSignup/logout'\n\n\n\nexport default class SearchForm extends React.Component {\n\n    static contextType = DoggoContext;\n\n\n    constructor(props){\n        super(props)\n        \n        this.zipInput = React.createRef()\n        this.typeInput = React.createRef()\n        \n        this.state = {\n            clicked : false,\n            places : []\n        }\n    }\n\n    componentDidMount(){\n        const token = TokenService.getAuthToken();\n        const options =Â {\n            method : 'GET',\n            headers : {\n                'session_token' : token\n            }\n        }\n\n        fetch( `${config.API_ENDPOINT}/api/validate`, options )\n            .then( response => {\n                if( response.ok ){\n                    return response.json();\n                }\n\n                throw new Error( response.statusText );\n            })\n            .then( responseJson => {\n                this.setState({\n                    message : responseJson.message\n                })\n            })\n            .catch( err => {\n                console.log( err.message );\n                this.props.history.push( '/login' );\n            });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n\n        const searchValues = {\n            zip: this.zipInput.current.value,\n            type: this.typeInput.current.value\n           \n           \n        };\n        //console.log(searchValues)\n        console.log(TokenService.getAuthToken())\n        fetch(`${config.API_ENDPOINT}/api/search`, {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json',\n            'session_token': TokenService.getAuthToken()\n\n        },\n        body: JSON.stringify(searchValues)\n        })\n          .then(res => {\n            if(!res.ok){\n              return res.json().then(e => Promise.reject(e))\n            }\n            \n             return res.json()\n          })\n          .then(places => {\n\n            this.context.setLocations(places)\n            this.setState({\n                clicked : true,\n                places: places} \n            );\n\n\n          })\n          .catch(error => {\n              console.log(error)\n        })\n\n\n    }\n\n    render(){\n        return(\n                <div>\n                <Sidebar width={300} height={\"100vh\"}>\n                <Link to ='./dashboard'>Your Dashboard</Link>\n                <br></br>\n                <br></br>\n                <Link to ='./recommend'>Recommend A Business</Link>\n                </Sidebar>\n                <h1>Begin Your Search</h1>\n                <form className ='form-container' onSubmit={this.handleSubmit}>\n                <div className = \"input\">       \n                <label for=\"fname\" >Zip Code:</label>\n                <input ref = {this.zipInput} type=\"text\" id=\"zip\" name=\"zip\" defaultValue = \"10011\"/>\n                </div>\n                <div className = \"input\"> \n                <label for=\"type\">Type of Activity:</label>\n                <select ref = {this.typeInput} name=\"type\" id=\"type\">\n                <option value=\"Parks\">Parks</option>\n                <option value=\"Bars\">Bars</option>\n                <option value=\"Restaurants\">Restaurants</option>\n                <option value=\"Pet Supplies\">Pet Supplies</option>\n                <option value=\"Veterinarian Services\">Veterinarian Services</option>\n                <option value=\"Dog Beaches\">Beaches</option>\n                <option value=\"Pet Hotels\">Hotels</option>\n                <option value=\"Groomers\">Groomers</option>\n                <option value=\"Hiking Trails\"> Hiking Trails</option>\n                <option value=\"Brunch\">Brunch Spots</option>\n\n\n\n\n\n                </select>\n                </div>\n                <input type=\"submit\" value=\"Fetch!\" className=\"button\" />\n                </form>\n                <div className = \"results\"> {this.state.clicked ? <Results /> : null}</div>\n\n               \n                </div>\n        )\n    }\n}\n","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/results/results.js",["127","128"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Result from './result'\nimport MapWrapped from '../map/map'\nimport DoggoContext from '../context'\nimport LogOut from '../loginSignup/logout'\nimport config from '../config'\nimport TokenService from '../client-services/token'\n\n\nexport default class Results extends React.Component {\n\n    static contextType = DoggoContext;\n\n    componentDidMount(){\n        const token = TokenService.getAuthToken();\n        const options =Â {\n            method : 'GET',\n            headers : {\n                'session_token' : token\n            }\n        }\n\n        fetch( `${config.API_ENDPOINT}/api/validate`, options )\n            .then( response => {\n                if( response.ok ){\n                    return response.json();\n                }\n\n                throw new Error( response.statusText );\n            })\n            .then( responseJson => {\n                this.setState({\n                    message : responseJson.message\n                })\n            })\n            .catch( err => {\n                console.log( err.message );\n                this.props.history.push( '/login' );\n            });\n    }\n\n\n    render(){\n\n        console.log(process.env)\n    \n    const results = this.context.locations.results\n        \n     const searchResults = results.map( (places, i) => {\n\n            return (\n                <ul key = {this.context.locations.results[i].id}>\n                    <li className = {this.context.locations.results[i].id}>\n                     <Result \n                        title = {this.context.locations.results[i].name}\n                        address = {this.context.locations.results[i].formatted_address}\n                        overall_rating = {this.context.locations.results[i].rating}\n                        place_id = {this.context.locations.results[i].place_id}\n                        id ={this.context.locations.results[i].id}\n                     \n                        />\n                    </li>\n                </ul>)\n            \n                }\n\n\n      )\n      \n      return (\n        <div>    \n           <div>{searchResults}</div>\n           <div style={{ width: \"75vw\", height: \"100vh\" }} className = \"map\"> \n             \n                <MapWrapped       \n                googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${config.key}`}\n                loadingElement={<div style={{ height: \"100%\" }} />}\n                containerElement={<div style={{ height: \"100%\" }} />}\n                mapElement={<div style={{ height: \"100%\" }} /> }\n                />\n          \n            </div>\n        </div>  ) \n   \n    }\n\n}","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/config.js",["129"],"export default {\n    API_ENDPOINT: 'http://localhost:8040',\n    TOKEN_KEY: 'doggo-client-auth-token',\n    key: process.env.key || 'AIzaSyAZ9e8yrmg_qJFoBB7Giz4ZKzQNPl7fDm4'\n}","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/sidebar/sidebar.js",[],["130","131"],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/recommend/recommend.js",["132"],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/map/mapStyles.js",["133"],"export default [\n    {\n      featureType: \"water\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          color: \"#004367\"\n        }\n      ]\n    },\n    {\n      featureType: \"landscape\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          color: \"#1f8a70\"\n        }\n      ]\n    },\n    {\n      featureType: \"poi\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          color: \"#1f8a70\"\n        }\n      ]\n    },\n    {\n      featureType: \"road.highway\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          color: \"#979100\"\n        }\n      ]\n    },\n    {\n      featureType: \"road.arterial\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          color: \"#1f8a70\"\n        },\n        {\n          lightness: -20\n        }\n      ]\n    },\n    {\n      featureType: \"road.local\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          color: \"#1f8a70\"\n        },\n        {\n          lightness: -17\n        }\n      ]\n    },\n    {\n      elementType: \"labels.text.stroke\",\n      stylers: [\n        {\n          color: \"#ffffff\"\n        },\n        {\n          visibility: \"on\"\n        },\n        {\n          weight: 0.9\n        }\n      ]\n    },\n    {\n      elementType: \"labels.text.fill\",\n      stylers: [\n        {\n          visibility: \"on\"\n        },\n        {\n          color: \"#ffffff\"\n        }\n      ]\n    },\n    {\n      featureType: \"poi\",\n      elementType: \"labels\",\n      stylers: [\n        {\n          visibility: \"simplified\"\n        }\n      ]\n    },\n    {\n      elementType: \"labels.icon\",\n      stylers: [\n        {\n          visibility: \"off\"\n        }\n      ]\n    },\n    {\n      featureType: \"transit\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          color: \"#1f8a70\"\n        },\n        {\n          lightness: -10\n        }\n      ]\n    },\n    {},\n    {\n      featureType: \"administrative\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          color: \"#1f8a70\"\n        },\n        {\n          weight: 0.6\n        }\n      ]\n    }\n  ];\n  ",["134","135"],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/context.js",[],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/results/result.js",["136","137"],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/favorites/favorites.js",["138","139"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport favorite from './favorite'\nimport DoggoContext from '../context'\nimport Favorite from './favorite';\nimport Sidebar from '../sidebar/sidebar';\nimport LogOut from '../loginSignup/logout'\nimport config from '../config'\nimport TokenService from '../client-services/token'\n\n\n\nexport default class Favorites extends React.Component {\n\n    static contextType = DoggoContext;\n\n    componentDidMount(){\n        const token = TokenService.getAuthToken();\n        const options =Â {\n            method : 'GET',\n            headers : {\n                'session_token' : token\n            }\n        }\n\n        fetch( `${config.API_ENDPOINT}/api/validate`, options )\n            .then( response => {\n                if( response.ok ){\n                    return response.json();\n                }\n\n                throw new Error( response.statusText );\n            })\n            .then( responseJson => {\n                this.setState({\n                    message : responseJson.message\n                })\n            })\n            .catch( err => {\n                console.log( err.message );\n                this.props.history.push( '/login' );\n            });\n    }\n\n\n   \n\n    render(){\n    \n   \n        let spots = this.context.savedSpots.map((spot , i) => {\n            return (\n                <ul key = {this.context.savedSpots[i].id}>\n                    \n                <li >\n                    <Favorite\n                        title={this.context.savedSpots[i].title}\n                        doggoaddress={this.context.savedSpots[i].doggoaddress}\n                        id={this.context.savedSpots[i].id}\n                      />  \n                </li>\n                \n                </ul>\n\n            )\n        })\n      return (\n        <div> \n            <Sidebar width={300} height={\"100vh\"}>\n            <Link to ='./search'>Doggo Search</Link>\n            <br></br>\n            <br></br>\n            <Link to ='./recommend'>Recommend A Business</Link>\n            </Sidebar>    \n           <div>{spots}</div>\n        </div>  ) \n   \n    }\n\n}","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/favorites/rating.js",[],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/loginSignup/logout.js",[],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/welcome/welcome.js",["140"],"import React from 'react';\nimport './welcome.css'\nimport {Link} from 'react-router-dom'\n\n\n\nexport default class Welcome extends React.Component {\n\n    render(){\n\n        return(\n           <div>\n            <head>\n            <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\"/>\n            <link href=\"https://fonts.googleapis.com/css2?family=Gloria+Hallelujah&family=Roboto:wght@300&display=swap\" rel=\"stylesheet\"/>\n            <link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" />\n\n            </head>\n                <img className = \"logo\" src=\"images/logo-doggos.png\" width=\"200\" height=\"200\"/>\n                <button className = \"btn\"><Link to='/login'> Log in or Sign up here </Link></button>\n                <div class=\"container\">\n                    <div class=\"box\">\n            \n                        <div class=\"img-box\"  title=\"Search\" >\n                            <img src=\"https://www.californiabeaches.com/wp-content/uploads/2017/03/bigs-Jack-Russell-Terrier-Pup-digging-in-a-California-beach-e1-Large.jpg\" alt=\"\" />\n                            </div>\n                        \n                        <div class=\"content\">\n                        <h2>Oh the places your doggo will go</h2>\n                            <p>Use DoggoSearch to find hundreds of activities for you AND your furry bff. Doggone good time guranteed!</p>\n                    \n                        </div>  \n                    \n                    </div>\n                    <div class=\"box\">\n            \n                        <div class=\"img-box\"  title=\"Favorite\" \n                            ><img src=\"https://metro.co.uk/wp-content/uploads/2019/08/PinPep_HotelsdotCom_CanineCritic_003-0d70.jpg?quality=90&strip=all\" alt=\"\" /></div>\n                        \n                        <div class=\"content\">\n                            <h2>Never miss an Op-paw-tunity</h2>\n                            <p>Maintain a dashboard of all your favorite spots/activites or save new ones to visit someday!</p>\n\n                        </div>  \n\n                    </div>\n\n                    <div class=\"box\">\n                    \n                        <div class=\"img-box\"  title=\"Recommend\"\n                            ><img src=\"https://i.pinimg.com/originals/1b/4a/c4/1b4ac4e303c3cfc54a38ef0432f08f6e.jpg\" alt=\"\" /></div>\n                        \n                        <div class=\"content\">\n                            <h2>Be-leash me, you gotto go...</h2>\n                            <p>Help DoggosWelcome grow its directory by recomending businesses you don't see included</p>\n\n                        </div>  \n\n                    </div>\n\n                </div>    \n            </div>     \n        )\n    }\n}",{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":4,"column":8,"nodeType":"147","messageId":"148","endLine":4,"endColumn":18},{"ruleId":"145","severity":1,"message":"149","line":11,"column":8,"nodeType":"147","messageId":"148","endLine":11,"endColumn":18},{"ruleId":"141","replacedBy":"150"},{"ruleId":"143","replacedBy":"151"},{"ruleId":"141","replacedBy":"152"},{"ruleId":"143","replacedBy":"153"},{"ruleId":"145","severity":1,"message":"154","line":1,"column":8,"nodeType":"147","messageId":"148","endLine":1,"endColumn":18},{"ruleId":"145","severity":1,"message":"155","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":15},{"ruleId":"145","severity":1,"message":"156","line":3,"column":9,"nodeType":"147","messageId":"148","endLine":3,"endColumn":13},{"ruleId":"145","severity":1,"message":"157","line":5,"column":17,"nodeType":"147","messageId":"148","endLine":5,"endColumn":25},{"ruleId":"145","severity":1,"message":"158","line":5,"column":27,"nodeType":"147","messageId":"148","endLine":5,"endColumn":36},{"ruleId":"145","severity":1,"message":"159","line":5,"column":38,"nodeType":"147","messageId":"148","endLine":5,"endColumn":48},{"ruleId":"145","severity":1,"message":"160","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":15},{"ruleId":"145","severity":1,"message":"156","line":2,"column":17,"nodeType":"147","messageId":"148","endLine":2,"endColumn":21},{"ruleId":"145","severity":1,"message":"161","line":3,"column":8,"nodeType":"147","messageId":"148","endLine":3,"endColumn":14},{"ruleId":"162","severity":1,"message":"163","line":131,"column":49,"nodeType":"164","endLine":131,"endColumn":82},{"ruleId":"145","severity":1,"message":"156","line":3,"column":10,"nodeType":"147","messageId":"148","endLine":3,"endColumn":14},{"ruleId":"145","severity":1,"message":"155","line":4,"column":8,"nodeType":"147","messageId":"148","endLine":4,"endColumn":15},{"ruleId":"145","severity":1,"message":"149","line":7,"column":8,"nodeType":"147","messageId":"148","endLine":7,"endColumn":18},{"ruleId":"145","severity":1,"message":"165","line":43,"column":24,"nodeType":"147","messageId":"148","endLine":43,"endColumn":26},{"ruleId":"145","severity":1,"message":"166","line":43,"column":42,"nodeType":"147","messageId":"148","endLine":43,"endColumn":48},{"ruleId":"145","severity":1,"message":"156","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":14},{"ruleId":"141","replacedBy":"167"},{"ruleId":"143","replacedBy":"168"},{"ruleId":"145","severity":1,"message":"146","line":7,"column":8,"nodeType":"147","messageId":"148","endLine":7,"endColumn":18},{"ruleId":"145","severity":1,"message":"169","line":10,"column":8,"nodeType":"147","messageId":"148","endLine":10,"endColumn":14},{"ruleId":"145","severity":1,"message":"156","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":14},{"ruleId":"145","severity":1,"message":"169","line":6,"column":8,"nodeType":"147","messageId":"148","endLine":6,"endColumn":14},{"ruleId":null,"fatal":true,"severity":2,"message":"170","line":4,"column":29},{"ruleId":"141","replacedBy":"171"},{"ruleId":"143","replacedBy":"172"},{"ruleId":"145","severity":1,"message":"169","line":4,"column":8,"nodeType":"147","messageId":"148","endLine":4,"endColumn":14},{"ruleId":"173","severity":1,"message":"174","line":1,"column":1,"nodeType":"175","endLine":129,"endColumn":5},{"ruleId":"141","replacedBy":"176"},{"ruleId":"143","replacedBy":"177"},{"ruleId":"145","severity":1,"message":"156","line":2,"column":9,"nodeType":"147","messageId":"148","endLine":2,"endColumn":13},{"ruleId":"145","severity":1,"message":"165","line":131,"column":57,"nodeType":"147","messageId":"148","endLine":131,"endColumn":59},{"ruleId":"145","severity":1,"message":"178","line":3,"column":8,"nodeType":"147","messageId":"148","endLine":3,"endColumn":16},{"ruleId":"145","severity":1,"message":"169","line":7,"column":8,"nodeType":"147","messageId":"148","endLine":7,"endColumn":14},{"ruleId":"179","severity":1,"message":"180","line":19,"column":17,"nodeType":"164","endLine":19,"endColumn":96},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"no-unused-vars","'MapWrapped' is defined but never used.","Identifier","unusedVar","'StarRating' is defined but never used.",["181"],["182"],["181"],["182"],"'SearchForm' is defined but never used.","'Sidebar' is defined but never used.","'Link' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useContext' is defined but never used.","'Route' is defined but never used.","'SignUp' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'id' is assigned a value but never used.","'rating' is assigned a value but never used.",["181"],["182"],"'LogOut' is defined but never used.","Parsing error: Unterminated string constant\n\n  2 |     API_ENDPOINT: 'http://localhost:8040',\n  3 |     TOKEN_KEY: 'doggo-client-auth-token',\n> 4 |     key: process.env.key || 'AIzaSyAZ9e8yrmg_qJFoBB7Giz4ZKzQNPl7fDm4\n    |                             ^\n  5 | }",["181"],["182"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration",["181"],["182"],"'favorite' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]