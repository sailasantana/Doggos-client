[{"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/context.js":"1","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/results/results.js":"2","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/search/search.js":"3","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/loginSignup/login-page.js":"4","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/map/map.js":"5","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/config.js":"6","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/App.js":"7","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/results/result.js":"8","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/loginSignup/sign-up.js":"9","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/favorites/favorites.js":"10","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/sidebar/sidebar.js":"11","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/loginSignup/logout.js":"12","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/recommend/recommend.js":"13","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/favorites/favorite.js":"14","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/client-services/token.js":"15","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/client-services/auth-api-service.js":"16"},{"size":313,"mtime":1612136174162,"results":"17","hashOfConfig":"18"},{"size":3753,"mtime":1612192402809,"results":"19","hashOfConfig":"18"},{"size":4708,"mtime":1612732674763,"results":"20","hashOfConfig":"18"},{"size":2686,"mtime":1612276843233,"results":"21","hashOfConfig":"18"},{"size":2979,"mtime":1612144241014,"results":"22","hashOfConfig":"18"},{"size":177,"mtime":1612729088631,"results":"23","hashOfConfig":"18"},{"size":2962,"mtime":1612732500445,"results":"24","hashOfConfig":"18"},{"size":4898,"mtime":1612192355185,"results":"25","hashOfConfig":"18"},{"size":2503,"mtime":1612277103100,"results":"26","hashOfConfig":"18"},{"size":2126,"mtime":1611584112059,"results":"27","hashOfConfig":"18"},{"size":841,"mtime":1612733785759,"results":"28","hashOfConfig":"18"},{"size":399,"mtime":1611239838109,"results":"29","hashOfConfig":"18"},{"size":3177,"mtime":1611610959899,"results":"30","hashOfConfig":"18"},{"size":1652,"mtime":1611009750887,"results":"31","hashOfConfig":"18"},{"size":560,"mtime":1612218472580,"results":"32","hashOfConfig":"18"},{"size":1086,"mtime":1610586843527,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1jzzm3",{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/context.js",[],["79","80"],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/results/results.js",["81","82","83"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Result from './result'\nimport MapWrapped from '../map/map'\nimport DoggoContext from '../context'\nimport LogOut from '../loginSignup/logout'\nimport config from '../config'\nimport TokenService from '../client-services/token'\n\n\nexport default class Results extends React.Component {\n\n    static contextType = DoggoContext;\n\n    componentDidMount(){\n        const token = TokenService.getAuthToken();\n        const options =Â {\n            method : 'GET',\n            headers : {\n                'session_token' : token\n            }\n        }\n\n        fetch( `${config.API_ENDPOINT}/api/validate`, options )\n            .then( response => {\n                if( response.ok ){\n                    return response.json();\n                }\n\n                throw new Error( response.statusText );\n            })\n            .then( responseJson => {\n                this.setState({\n                    message : responseJson.message\n                })\n            })\n            .catch( err => {\n                console.log( err.message );\n                this.props.history.push( '/login' );\n            });\n    }\n\n\n    render(){\n\n    const results = this.context.locations.results\n\n    // console.log(results)\n    // console.log(this.context.currentZip.slice(0,-1))\n    // console.log(this.context.locations.results[0].formatted_address.split(',')[2].split(' ')[2].slice(0,-1) )\n\n    \n    let revised = () => {\n        \n        if(!results){\n            return 'No Results Found - Please try a different zip'\n        }       \n        else {\n\n         return results.filter((result,i) => {\n          //console.log(typeof(result.formatted_address.split(',')[2].split(' ')[2].slice(0,-1)))   \n         //console.log(result.formatted_address.split(',')[2].split(' ')[2].slice(0,-1), this.context.currentZip.slice(0,-1))\n           let zip = this.context.currentZip\n           console.log(result.formatted_address)\n           let zips = result.formatted_address\n           return zips.slice(-20,-16) == zip.slice(0,-1)})\n      \n            }\n        } \n\n    const filteredResults =  revised() \n    console.log('filter results',filteredResults)\n\n     const searchResults = filteredResults.map( (place, i) => {\n\n            return (\n                <ul key = {place.id}>\n                    <li className = {place.id}>\n                     <Result \n                        title = {place.name}\n                        address = {place.formatted_address}\n                        overall_rating = {place.rating}\n                        place_id = {place.place_id}\n                        id ={place.id}\n                     \n                        />\n                    </li>\n                </ul>)\n            \n                }\n\n\n      )\n\n\n             return(\n                 <div>\n                     {filteredResults.length > 0 ?\n                     <div>\n                     <div>{searchResults}</div>\n                     <div style={{ width: \"75vw\", height: \"100vh\" }} className = \"map\"> \n                          <MapWrapped       \n                          googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${config.key}`}\n                          loadingElement={<div style={{ height: \"100%\" }} />}\n                          containerElement={<div style={{ height: \"100%\" }} />}\n                          mapElement={<div style={{ height: \"100%\" }} /> }\n                          />\n                    \n                      </div>\n                      </div>\n                      : 'No results - Please try a different zip'\n                     }\n                     </div>\n                \n             )\n   \n    }\n\n}",["84","85"],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/search/search.js",["86","87"],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/loginSignup/login-page.js",["88","89","90"],"import React from 'react'\nimport { Route, Link } from 'react-router-dom'\nimport SignUp from './sign-up'\nimport AuthApiService from '../client-services/auth-api-service'\nimport TokenService from '../client-services/token'\nimport DoggoContext from '../context'\nimport config from '../config'\nimport './login.css'\n\nexport default class LoginPage extends React.Component {\n\n    static contextType = DoggoContext;\n\n    static defaultProps = {\n        onValidLogin: () => {}\n    };\n\n    constructor(props) {\n        super(props);\n        this.userInput = React.createRef();\n        this.passInput = React.createRef();\n        this.state = {error: null};\n    };\n\n    // handle login authentication and validation on submit. //\n    handleJwtLoginAuth = e => {\n        e.preventDefault();\n       \n     \n        AuthApiService.postLogin({\n            user_name: this.userInput.current.value,\n            password: this.passInput.current.value \n        })\n        .then(res => {\n        \n            this.context.setUserName(this.userInput.current.value)\n            localStorage.setItem( 'user_name', this.userInput.current.value );       \n            TokenService.saveAuthToken(res.token);\n            this.props.onValidLogin(); \n\n            })\n                \n           \n        .then(() => {\n            this.props.history.push('/search')})\n            \n        .catch(res => {\n            this.setState({\n            error: alert(\"Invalid username or password. Please re-enter your credentials.\")\n                });\n            });\n    \n    }\n\n\n    render() {\n\n          return(\n            <div className=\"container\">\n                <div className=\"left\">\n                    <div className=\"header\">\n                    <h2 className=\"animation a1\">DoggosWelcome</h2>\n                    <h4 className=\"animation a2\">Explore over thousands of dog-friendly places to stay, play, and eat with your dog! <br/><br/> Log in to get started</h4>\n                    </div>\n                    <form className=\"login-form\" onSubmit={this.handleJwtLoginAuth}>\n                    <input type=\"text\" ref = {this.userInput}  name=\"user\" id=\"user\" className=\"form-field animation a3\" placeholder=\"Username\"/>\n                    <input type=\"password\" ref = {this.passInput} name=\"password\" id=\"password\" className=\"form-field animation a4\" placeholder=\"Password\"/>\n                    <button className=\"animation a6\">LOGIN</button>\n                    </form>\n                    <Link to = '/sign-up'>New User? Sign up here</Link>\n                </div>\n                <div className=\"right\"></div>\n            </div>\n                                  \n              \n\n\n\n\n\n        )\n    }\n\n\n}\n",["91","92"],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/map/map.js",["93","94","95","96","97","98"],"import SearchForm from '../search/search'\nimport Sidebar from '../sidebar/sidebar'\nimport {Link} from 'react-router-dom'\nimport DoggoContext from '../context'\nimport React, { useState, useEffect, useContext } from \"react\";\nimport {\n  withGoogleMap,\n  withScriptjs,\n  GoogleMap,\n  Marker,\n  InfoWindow\n} from \"react-google-maps\";\nimport mapStyles from \"./mapStyles\";\nimport config from '../config';\nimport TokenService from '../client-services/token'\n \n \nclass Map extends React.Component {\n    static contextType = DoggoContext\n\n    state = {\n        selected : {}\n        \n    }\n\n    componentDidMount(){\n      const token = TokenService.getAuthToken();\n      const options =Â {\n          method : 'GET',\n          headers : {\n              'session_token' : token\n          }\n      }\n\n      fetch( `${config.API_ENDPOINT}/api/validate`, options )\n          .then( response => {\n              if( response.ok ){\n                  return response.json();\n              }\n\n              throw new Error( response.statusText );\n          })\n          .then( responseJson => {\n              this.setState({\n                  message : responseJson.message\n              })\n          })\n          .catch( err => {\n              console.log( err.message );\n              this.props.history.push( '/login' );\n          });\n  }\n\n\n\n    render(){\n\n   \n  \n    return (\n        <div>\n          {this.context.locations ?\n        <GoogleMap\n            defaultZoom={12}\n            initialCenter={{lat:39.011902,lng:-98.484245}}\n            center={{lat:this.context.locations.results[0].geometry.location.lat, lng:this.context.locations.results[0].geometry.location.lng}}\n            defaultOptions={{ styles: mapStyles }}\n        >\n            {this.context.locations.results.map((result , i)=> (\n            <Marker\n                key={result.i}\n                position={{\n                lat: result.geometry.location.lat,\n                lng: result.geometry.location.lng\n                }}\n                onClick={() => {\n                    this.setState({selected:result});\n                  }}\n                icon={{\n                url: \"https://img.icons8.com/cotton/64/000000/dog-jump--v1.png\",\n                scaledSize: new window.google.maps.Size(25, 25)\n                }}\n            /> \n            ))} \n        {this.state.selected && this.state.selected.geometry && (\n        <InfoWindow\n          onCloseClick={() => {\n            this.setState({selected:null});\n        }}\n          position={{\n\n            lat: this.state.selected.geometry.location.lat,\n            lng: this.state.selected.geometry.location.lng\n          }}\n        >\n          <div>\n            <h2>{this.state.selected.name}</h2>\n            <p>{this.state.selected.formatted_address}</p>\n          </div>\n        </InfoWindow>\n      )}\n        </GoogleMap>\n        : null }\n        </div>\n     );\n    }\n  }\n  \n\nconst MapWrapped  = withScriptjs(withGoogleMap(Map))\n \nexport default MapWrapped;","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/config.js",["99"],"export default {\n    API_ENDPOINT: 'http://localhost:8040',\n    API_TOKEN_KEY: 'doggo-client-auth-token',\n    key: process.env.key || 'AIzaSyAZ9e8yrmg_qJFoBB7Giz4ZKzQNPl7fDm4'\n}","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/App.js",["100","101","102"],"import LoginPage from './loginSignup/login-page';\nimport SignUp from './loginSignup/sign-up';\nimport {Route} from 'react-router-dom';\nimport MapWrapped from './map/map';\nimport Favorites from './favorites/favorites';\nimport './map/map.css';\nimport Recommend from './recommend/recommend';\nimport DoggoContext from './context';\nimport React from 'react';\nimport SearchForm from './search/search';\nimport StarRating from './favorites/rating';\nimport LogOut from './loginSignup/logout';\nimport TokenService from './client-services/token';\nimport config from './config';\nimport { withRouter } from 'react-router-dom';\n\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      places : [],\n      user_name: '',\n      savedSpots : [],\n      detailsToDisplay: [],\n      currentZip: ''\n    }\n  }\n\n  componentDidMount( ){\n\n    let user_name = localStorage.getItem('user_name')\n    \n    this.setState({user_name:user_name})\n\n    fetch(`${config.API_ENDPOINT}/api/${user_name}/dashboard`, {\n      headers: {\n        'session_token':`${TokenService.getAuthToken()}`\n      }\n    })\n    .then(res => {\n      if(!res.ok){\n        return res.json().then(e => Promise.reject(e))\n      }\n      console.log(res)\n      return res.json()\n    })\n\n    .then(spots => {\n      console.log(spots)\n      \n      this.setUserSpots(spots)\n    })\n    .catch(error => {\n      alert('You must be logged in to continue')\n      this.props.history.push('/login')\n    })\n  }\n\n  getPlaces = (places) => {\n    this.setState({places: places })\n  }\n\n  updateUserName = (user) => {\n    this.setState({user_name: user})\n    \n  }\n\n  setUserSpots = spots => {\n    this.setState({savedSpots : spots})\n\n  }\n\n\n  addToSaved = (spot) => {\n    this.setState({ savedSpots: [...this.state.savedSpots, spot]})\n  }\n\n  deleteSpot = (id) => {\n    const { savedSpots } = this.state\n \n    this.setState({\n      savedSpots: savedSpots.filter (spot => {\n        return spot.id !== id\n      })\n    })\n\n  }\n\n  setCurrentZip = (zip) => {\n    this.setState({currentZip: zip})\n\n  }\n\n  render(){\n\n    const contextValues = {\n      locations: this.state.places,\n      setLocations : this.getPlaces,\n      user_name : this.state.user_name,\n      setUserName : this.updateUserName,\n      savedSpots : this.state.savedSpots,\n      addToSaved : this.addToSaved,\n      setUserSpots : this.setUserSpots,\n      deleteSpot : this.deleteSpot,\n      currentZip: this.state.currentZip,\n      setCurrentZip: this.setCurrentZip      \n    }\n  \n\n  return (\n\n    <DoggoContext.Provider value={contextValues}>\n\n    <div className=\"App\">\n      <Route exact path='/login' component={LoginPage} />\n      <Route path='/sign-up' component={SignUp} />\n      <Route path='/search' component={SearchForm} />\n      <Route path='/dashboard' component={Favorites} />\n      <Route path='/recommend' component={Recommend} />\n    </div>\n    </ DoggoContext.Provider >\n\n    )\n\n  } \n}\n\n\nexport default withRouter(App);\n","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/results/result.js",["103","104"],"import React from 'react';\nimport {Link} from 'react-router-dom'\nimport TokenService from '../client-services/token';\nimport config from '../config'\nimport DoggoContext from '../context'\n\n\n\n\nexport default class Result extends React.Component {\n\n    static contextType = DoggoContext\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            error : null,\n            selectedPlaceId: '',\n            learnMore:false,\n            results : []\n        }\n    }\n\n    componentDidMount(){\n        const token = TokenService.getAuthToken();\n        const options =Â {\n            method : 'GET',\n            headers : {\n                'session_token' : token\n            }\n        }\n\n        fetch( `${config.API_ENDPOINT}/api/validate`, options )\n            .then( response => {\n                if( response.ok ){\n                    return response.json();\n                }\n\n                throw new Error( response.statusText );\n            })\n            .then( responseJson => {\n                this.setState({\n                    message : responseJson.message\n                })\n            })\n            .catch( err => {\n                console.log( err.message );\n                this.props.history.push( '/login' );\n            });\n    }\n\n   \n\n    handleAdd = (e) => {\n     \n        let newSpot = {\n            title : this.props.title,\n            doggoaddress: this.props.address\n        }\n\n       fetch(`${config.API_ENDPOINT}/api/${this.context.user_name}/dashboard`,  {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json',\n            'session_token': TokenService.getAuthToken()\n        },\n        body: JSON.stringify(newSpot),\n        })\n        .then(res => {\n            if(!res.ok){\n                return res.json().then(e => Promise.reject(e))\n            }\n            alert('Doggo Spot Successfully Added')\n            return res.json()\n        })\n        .then(spot => {\n            console.log(spot)\n            this.context.addToSaved(spot)\n        })\n        .catch(error => {\n            alert({error})\n        })\n    }\n\n    handleGet = (event) => {\n        const place_id = event.target.value;\n        this.setState({selectedPlaceId:place_id})\n        this.setState({learnMore:true})\n\n\n     \n        fetch(`${config.API_ENDPOINT}/api/details/${place_id}`,  {\n         method: 'GET',\n         headers: {\n             'content-type': 'application/json',\n             'session_token': TokenService.getAuthToken()\n         }\n         })\n         .then(res => {\n             console.log(res)\n             if(!res.ok){\n                 return res.json().then(e => Promise.reject(e))\n             }\n             return res.json()\n         })\n         .then(details => {\n             console.log(details)\n             this.setState({results:details})\n            })\n         .catch(error => {\n             alert({error})\n         })\n    }\n\n\n    handleClick = (event) => {\n        this.setState({learnMore:false})\n    }\n    \n\n    render () {  \n      const {title , address, overall_rating, place_id, id} = this.props;\n      \n        return (\n        <div className='Result'>\n\n          <h2 className='Result_title' id='Result_title' name='Result_title'>\n            \n              {title}\n          \n          </h2>\n          <p className='Result_address' id =\"Result_address\" name = \"Result_address\">\n            \n            {address}\n        \n          </p>\n          <p className='Result_rating'>\n            \n            overall user rating: {overall_rating}\n        \n          </p>\n          <button \n            className='Get_details' \n            onClick = {this.handleGet}\n            type='button' \n            value = {place_id}>           \n            Learn More\n         </button>\n        \n          {this.state.results.result && this.state.learnMore ? \n                        <div>\n                        <p>{this.state.results.result.website}</p>\n                        <p>{this.state.results.result.formatted_phone_number}</p>\n                        <ul> <p>Reviews:</p>\n                            <li>\"{this.state.results.result.reviews[0].text}\" - {this.state.results.result.reviews[0].author_name} </li>\n                            <li>\"{this.state.results.result.reviews[2].text}\" - {this.state.results.result.reviews[2].author_name} </li>\n                            <li>\"{this.state.results.result.reviews[4].text}\" - {this.state.results.result.reviews[4].author_name} </li>\n                        </ul>\n                        <button onClick = {this.handleClick}>x</button>\n        \n                        </div> : null}\n\n\n          <button \n            className='Add_to_board' \n            onClick = {this.handleAdd}\n            type='button'>\n           \n            Add To Doggo Board\n\n          </button>\n          \n         \n        \n         \n        </div>\n      )\n    }\n  }","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/loginSignup/sign-up.js",["105","106"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport AuthApiService from '../client-services/auth-api-service'\nimport './signup.css'\n\n\n\nexport default class SignUp extends React.Component {\n\n    constructor(props){\n        super(props)\n        this.fNameInput = React.createRef()\n        this.lNameInput = React.createRef()\n        this.userInput = React.createRef()\n        this.passInput = React.createRef()\n    }\n\n    handleNewUser = (e) => {\n        e.preventDefault();\n\n        const newUser = {\n            first_name : this.fNameInput.current.value,\n            last_name: this.lNameInput.current.value,\n            user_name: this.userInput.current.value,\n            password: this.passInput.current.value\n\n        }\n\n        AuthApiService.postUser(newUser)\n        .then(user => {\n            this.fNameInput.current.value = '';\n            this.lNameInput.current.value = '';\n            this.userInput.current.value = '';\n            this.passInput.current.value = '';\n        })\n        .then(() => {\n            this.props.history.push(`/login`)\n            window.alert('Registered successfully. Please log in with your new credentials.');\n        })\n        .catch(res => {\n            this.setState({\n                error: window.alert('An unexpected error occurred. Please try again later.')\n            });\n        })\n\n\n\n    }\n\n    render(){\n\n        return(\n            <div class=\"container\">\n                <div class=\"center\">\n                    <div class=\"header\">\n                    <h2 >What are you waiting for? Sign up already!</h2>\n                    <img src = \"https://thumbs.gfycat.com/GrossContentBluemorphobutterfly-size_restricted.gif\"/>\n                    </div>\n                    <form className=\"signup-form\" onSubmit = {this.handleNewUser}>\n                    <input ref = {this.fNameInput} type = 'text' name= 'first_name' id='first_name' class=\"form-field\" placeholder=\"First Name\"/>\n                    <input  ref ={this.lNameInput} type = 'text' name= 'last_name' id='last_name' class=\"form-field\" placeholder=\"Last Name\"/>\n                    <input type=\"text\" ref = {this.userInput}  name=\"user\" id=\"user\" class=\"form-field\" placeholder=\"Username\"/>\n                    <input type=\"password\" ref = {this.passInput} name=\"password\" id=\"password\" class=\"form-field\" placeholder=\"Password\"/>\n                    <button >Sign Up</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n\n\n}",["107","108"],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/favorites/favorites.js",["109","110"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport favorite from './favorite'\nimport DoggoContext from '../context'\nimport Favorite from './favorite';\nimport Sidebar from '../sidebar/sidebar';\nimport LogOut from '../loginSignup/logout'\nimport config from '../config'\nimport TokenService from '../client-services/token'\n\n\n\nexport default class Favorites extends React.Component {\n\n    static contextType = DoggoContext;\n\n    componentDidMount(){\n        const token = TokenService.getAuthToken();\n        const options =Â {\n            method : 'GET',\n            headers : {\n                'session_token' : token\n            }\n        }\n\n        fetch( `${config.API_ENDPOINT}/api/validate`, options )\n            .then( response => {\n                if( response.ok ){\n                    return response.json();\n                }\n\n                throw new Error( response.statusText );\n            })\n            .then( responseJson => {\n                this.setState({\n                    message : responseJson.message\n                })\n            })\n            .catch( err => {\n                console.log( err.message );\n                this.props.history.push( '/login' );\n            });\n    }\n\n\n   \n\n    render(){\n    \n   \n        let spots = this.context.savedSpots.map((spot , i) => {\n            return (\n                <ul key = {this.context.savedSpots[i].id}>\n                    \n                <li >\n                    <Favorite\n                        title={this.context.savedSpots[i].title}\n                        doggoaddress={this.context.savedSpots[i].doggoaddress}\n                        id={this.context.savedSpots[i].id}\n                      />  \n                </li>\n                \n                </ul>\n\n            )\n        })\n      return (\n        <div> \n            <Sidebar width={300} height={\"100vh\"}>\n            <Link to ='./search'>Doggo Search</Link>\n            <br></br>\n            <br></br>\n            <Link to ='./recommend'>Recommend A Business</Link>\n            </Sidebar>    \n           <div>{spots}</div>\n        </div>  ) \n   \n    }\n\n}","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/sidebar/sidebar.js",[],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/loginSignup/logout.js",[],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/recommend/recommend.js",["111"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Sidebar from '../sidebar/sidebar'\nimport LogOut from '../loginSignup/logout'\nimport config from '../config'\nimport TokenService from '../client-services/token';\n\n\n\n\nexport default class Recommend extends React.Component {\n\n    state = {\n        submit: false \n    }\n\n    componentDidMount(){\n        const token = TokenService.getAuthToken();\n        const options =Â {\n            method : 'GET',\n            headers : {\n                'session_token' : token\n            }\n        }\n\n        fetch( `${config.API_ENDPOINT}/api/validate`, options )\n            .then( response => {\n                if( response.ok ){\n                    return response.json();\n                }\n\n                throw new Error( response.statusText );\n            })\n            .then( responseJson => {\n                this.setState({\n                    message : responseJson.message\n                })\n            })\n            .catch( err => {\n                console.log( err.message );\n                this.props.history.push( '/login' );\n            });\n    }\n\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        \n\n        this.setState({submit : true});\n\n\n    }\n\n    render(){\n\n        return(\n            <div>\n            <Sidebar width={300} height={\"100vh\"}>\n            <Link to ='./search'>Doggo Search</Link>\n            <br></br>\n            <br></br>\n            <Link to ='./dashboard'>My Dashboard</Link>\n            \n            </Sidebar>\n\n            <form className ='form-container' onSubmit = {this.handleSubmit} >\n                <h1>Recommend A Business To Add To The Doggo Directory</h1>\n                <div className = \"input\"> \n                <label for=\"type\">Name:</label>\n                <input type=\"text\" id=\"name\" name=\"name\" value=\"Paw Haven\" />\n                </div>\n                <div className = \"input\"> \n                <label for=\"type\">Type Of Business:</label>\n                <select name=\"type\" id=\"type\">\n                <option value=\"Pet Supplies\">Pet Supplies</option>\n                <option value=\"Parks\">Park</option>\n                <option value=\"Bars\">Bar</option>\n                <option value=\"Restaurants\">Restaurant</option> \n                <option value=\"Veterinarian Services\">Veterinarian Services</option>\n                <option value=\"Dog Beaches\">Dog Beach</option>\n                <option value=\"Other\">Other</option>\n                </select>   \n                </div>\n                <div className = \"input\">       \n                <label for=\"address\" >Address:</label>\n                <p>Please include Street Address, City, State and Zip</p>\n                <textarea type=\"text\" id=\"address\" name=\"address\" value=\"123 Fluffy Lane, Brooklyn, NY 11201\" />\n                </div>\n                <input type=\"submit\" value=\"Recommend\" className=\"button\" />\n                </form>\n                <div className = \"results\"> {this.state.submit ? <p>Your recommendation was successfully submitted. It will be reviewed by our Doggo Administrator. Thank you!</p> : null}</div>\n                </div>\n        )\n    }\n}","/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/favorites/favorite.js",["112","113","114","115","116"],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/client-services/token.js",[],"/Users/rockerbox/capstones/capstone-2-client/doggoswelcome/src/client-services/auth-api-service.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":2,"column":10,"nodeType":"123","messageId":"124","endLine":2,"endColumn":14},{"ruleId":"121","severity":1,"message":"125","line":6,"column":8,"nodeType":"123","messageId":"124","endLine":6,"endColumn":14},{"ruleId":"126","severity":1,"message":"127","line":66,"column":39,"nodeType":"128","messageId":"129","endLine":66,"endColumn":41},{"ruleId":"117","replacedBy":"130"},{"ruleId":"119","replacedBy":"131"},{"ruleId":"121","severity":1,"message":"132","line":7,"column":8,"nodeType":"123","messageId":"124","endLine":7,"endColumn":18},{"ruleId":"121","severity":1,"message":"125","line":10,"column":8,"nodeType":"123","messageId":"124","endLine":10,"endColumn":14},{"ruleId":"121","severity":1,"message":"133","line":2,"column":10,"nodeType":"123","messageId":"124","endLine":2,"endColumn":15},{"ruleId":"121","severity":1,"message":"134","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":14},{"ruleId":"121","severity":1,"message":"135","line":7,"column":8,"nodeType":"123","messageId":"124","endLine":7,"endColumn":14},{"ruleId":"117","replacedBy":"136"},{"ruleId":"119","replacedBy":"137"},{"ruleId":"121","severity":1,"message":"138","line":1,"column":8,"nodeType":"123","messageId":"124","endLine":1,"endColumn":18},{"ruleId":"121","severity":1,"message":"139","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":15},{"ruleId":"121","severity":1,"message":"122","line":3,"column":9,"nodeType":"123","messageId":"124","endLine":3,"endColumn":13},{"ruleId":"121","severity":1,"message":"140","line":5,"column":17,"nodeType":"123","messageId":"124","endLine":5,"endColumn":25},{"ruleId":"121","severity":1,"message":"141","line":5,"column":27,"nodeType":"123","messageId":"124","endLine":5,"endColumn":36},{"ruleId":"121","severity":1,"message":"142","line":5,"column":38,"nodeType":"123","messageId":"124","endLine":5,"endColumn":48},{"ruleId":"143","severity":1,"message":"144","line":1,"column":1,"nodeType":"145","endLine":5,"endColumn":2},{"ruleId":"121","severity":1,"message":"132","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":18},{"ruleId":"121","severity":1,"message":"146","line":11,"column":8,"nodeType":"123","messageId":"124","endLine":11,"endColumn":18},{"ruleId":"121","severity":1,"message":"125","line":12,"column":8,"nodeType":"123","messageId":"124","endLine":12,"endColumn":14},{"ruleId":"121","severity":1,"message":"122","line":2,"column":9,"nodeType":"123","messageId":"124","endLine":2,"endColumn":13},{"ruleId":"121","severity":1,"message":"147","line":123,"column":57,"nodeType":"123","messageId":"124","endLine":123,"endColumn":59},{"ruleId":"121","severity":1,"message":"122","line":2,"column":10,"nodeType":"123","messageId":"124","endLine":2,"endColumn":14},{"ruleId":"148","severity":1,"message":"149","line":57,"column":21,"nodeType":"150","endLine":57,"endColumn":113},{"ruleId":"117","replacedBy":"151"},{"ruleId":"119","replacedBy":"152"},{"ruleId":"121","severity":1,"message":"153","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":16},{"ruleId":"121","severity":1,"message":"125","line":7,"column":8,"nodeType":"123","messageId":"124","endLine":7,"endColumn":14},{"ruleId":"121","severity":1,"message":"125","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":14},{"ruleId":"121","severity":1,"message":"122","line":3,"column":10,"nodeType":"123","messageId":"124","endLine":3,"endColumn":14},{"ruleId":"121","severity":1,"message":"139","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":15},{"ruleId":"121","severity":1,"message":"146","line":7,"column":8,"nodeType":"123","messageId":"124","endLine":7,"endColumn":18},{"ruleId":"121","severity":1,"message":"147","line":43,"column":24,"nodeType":"123","messageId":"124","endLine":43,"endColumn":26},{"ruleId":"121","severity":1,"message":"154","line":43,"column":42,"nodeType":"123","messageId":"124","endLine":43,"endColumn":48},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'LogOut' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["155"],["156"],"'MapWrapped' is defined but never used.","'Route' is defined but never used.","'SignUp' is defined but never used.","'config' is defined but never used.",["155"],["156"],"'SearchForm' is defined but never used.","'Sidebar' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'useContext' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'StarRating' is defined but never used.","'id' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["155"],["156"],"'favorite' is defined but never used.","'rating' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]